[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(2)] ✔️
[Trimmer Stage: Transactions(1)] ❌
[Trimmer Stage: Transactions(0)] ❌
[Trimmer Stage: TransactionHeader(1, BlockAdvance(0))] ✔️
[Trimmer Stage: TransactionHeader(0, BlockAdvance(0))] ✔️
[Trimmer Stage: Returns(1, 2)] ✔️
[Trimmer Stage: Returns(1, 1)] ✔️
[Trimmer Stage: Returns(1, 0)] ✔️
[Trimmer Stage: Inputs(1, 4)] ❌
[Trimmer Stage: Inputs(1, 0)] ❌
[Trimmer Stage: Inputs(0, 4)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(1, 7)] ❌
[Trimmer Stage: Sender(1, 6)] ✔️
[Trimmer Stage: Sender(1, 5)] ❌
[Trimmer Stage: Sender(1, 4)] ❌
[Trimmer Stage: Sender(1, 3)] ❌
[Trimmer Stage: Sender(1, 2)] ❌
[Trimmer Stage: Sender(1, 1)] ❌
[Trimmer Stage: Sender(1, 0)] ✔️
[Trimmer Stage: Sender(0, 7)] ✔️
[Trimmer Stage: Sender(0, 6)] ✔️
[Trimmer Stage: Sender(0, 5)] ✔️
[Trimmer Stage: Sender(0, 4)] ✔️
[Trimmer Stage: Sender(0, 3)] ✔️
[Trimmer Stage: Sender(0, 2)] ✔️
[Trimmer Stage: Sender(0, 1)] ✔️
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(1, 20)] ✔️
[Trimmer Stage: Receiver(1, 19)] ✔️
[Trimmer Stage: Receiver(1, 18)] ✔️
[Trimmer Stage: Receiver(1, 17)] ✔️
[Trimmer Stage: Receiver(1, 16)] ✔️
[Trimmer Stage: Receiver(1, 15)] ✔️
[Trimmer Stage: Receiver(1, 14)] ✔️
[Trimmer Stage: Receiver(1, 13)] ✔️
[Trimmer Stage: Receiver(1, 12)] ✔️
[Trimmer Stage: Receiver(1, 11)] ✔️
[Trimmer Stage: Receiver(1, 10)] ✔️
[Trimmer Stage: Receiver(1, 9)] ✔️
[Trimmer Stage: Receiver(1, 8)] ✔️
[Trimmer Stage: Receiver(1, 7)] ✔️
[Trimmer Stage: Receiver(1, 6)] ✔️
[Trimmer Stage: Receiver(1, 5)] ✔️
[Trimmer Stage: Receiver(1, 4)] ✔️
[Trimmer Stage: Receiver(1, 3)] ✔️
[Trimmer Stage: Receiver(1, 2)] ✔️
[Trimmer Stage: Receiver(1, 1)] ✔️
[Trimmer Stage: Receiver(1, 0)] ✔️
[Trimmer Stage: Receiver(0, 20)] ✔️
[Trimmer Stage: Receiver(0, 19)] ✔️
[Trimmer Stage: Receiver(0, 18)] ✔️
[Trimmer Stage: Receiver(0, 17)] ✔️
[Trimmer Stage: Receiver(0, 16)] ✔️
[Trimmer Stage: Receiver(0, 15)] ✔️
[Trimmer Stage: Receiver(0, 14)] ✔️
[Trimmer Stage: Receiver(0, 13)] ✔️
[Trimmer Stage: Receiver(0, 12)] ✔️
[Trimmer Stage: Receiver(0, 11)] ✔️
[Trimmer Stage: Receiver(0, 10)] ✔️
[Trimmer Stage: Receiver(0, 9)] ✔️
[Trimmer Stage: Receiver(0, 8)] ✔️
[Trimmer Stage: Receiver(0, 7)] ✔️
[Trimmer Stage: Receiver(0, 6)] ✔️
[Trimmer Stage: Receiver(0, 5)] ✔️
[Trimmer Stage: Receiver(0, 4)] ✔️
[Trimmer Stage: Receiver(0, 3)] ✔️
[Trimmer Stage: Receiver(0, 2)] ✔️
[Trimmer Stage: Receiver(0, 1)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ sender/receiver selector TX[1] ]
[ we try sorting the transaction list ]
reduced testcases from 304 to 144 bytes (by 53 %) edit distance 167
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 0

TX[0] with tx_sender[35]; tx_receiver[110]; call_value: 0x0; length: 36; block+=1; #returns=0
  func: transferOwner(address) (0x4fb2e45d)
  input: { address(0xc04689c0c5d48cec7275152b3026b53f6f78d03d),  }
TX[1] with tx_sender[60]; tx_receiver[188]; call_value: 0x0; length: 36; block+=1; #returns=3
  func: destoryContract(address) (0x9d02a866)
  input: { address(0xc2018c3f08417e77b94fb541fed2bf1e09093edd),  }
  returns:
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000001
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 2; data: 0x0000000000000000000000000000000000000000000000000000000000000001
TX[2] with tx_sender[60]; tx_receiver[188]; call_value: 0x0; length: 36; block+=1; #returns=0
  func: destoryContract(address) (0x9d02a866)
  input: { address(0xc2018c3f08417e77b94fb541fed2bf1e09093edd),  }
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 0

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: transferOwner(address) (0x4fb2e45d)
  input: { address(0xc04689c0c5d48cec7275152b3026b53f6f78d03d),  }
TX[1] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: destoryContract(address) (0x9d02a866)
  input: { address(0xc2018c3f08417e77b94fb541fed2bf1e09093edd),  }
