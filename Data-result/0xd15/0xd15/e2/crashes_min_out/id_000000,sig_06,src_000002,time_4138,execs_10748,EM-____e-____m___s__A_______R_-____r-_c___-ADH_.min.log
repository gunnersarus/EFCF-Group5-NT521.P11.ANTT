[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(1)] ✔️
[Trimmer Stage: Transactions(0)] ❌
[Trimmer Stage: TransactionWithValue(0)] ✔️
[Trimmer Stage: TransactionHeader(0, CallValue(100000))] ✔️
[Trimmer Stage: TransactionHeader(0, CallValue(100))] ✔️
[Trimmer Stage: TransactionHeader(0, CallValue(1))] ✔️
[Trimmer Stage: TransactionHeader(0, CallValue(0))] ✔️
[Trimmer Stage: TransactionHeader(0, BlockAdvance(0))] ✔️
[Trimmer Stage: Returns(0, 1)] ❌
[Trimmer Stage: Returns(0, 0)] ❌
[Trimmer Stage: ReturnData(0, 1, 0)] ✔️
[Trimmer Stage: ReturnData(0, 0, 0)] ✔️
[Trimmer Stage: Inputs(0, 162)] ❌
[Trimmer Stage: Inputs(0, 132)] ❌
[Trimmer Stage: Inputs(0, 100)] ❌
[Trimmer Stage: Inputs(0, 68)] ✔️
[Trimmer Stage: Inputs(0, 36)] ✔️
[Trimmer Stage: Inputs(0, 4)] ✔️
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(0, 7)] ✔️
[Trimmer Stage: Sender(0, 6)] ✔️
[Trimmer Stage: Sender(0, 5)] ✔️
[Trimmer Stage: Sender(0, 4)] ✔️
[Trimmer Stage: Sender(0, 3)] ✔️
[Trimmer Stage: Sender(0, 2)] ✔️
[Trimmer Stage: Sender(0, 1)] ✔️
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(0, 20)] ✔️
[Trimmer Stage: Receiver(0, 19)] ✔️
[Trimmer Stage: Receiver(0, 18)] ✔️
[Trimmer Stage: Receiver(0, 17)] ✔️
[Trimmer Stage: Receiver(0, 16)] ✔️
[Trimmer Stage: Receiver(0, 15)] ✔️
[Trimmer Stage: Receiver(0, 14)] ✔️
[Trimmer Stage: Receiver(0, 13)] ✔️
[Trimmer Stage: Receiver(0, 12)] ✔️
[Trimmer Stage: Receiver(0, 11)] ✔️
[Trimmer Stage: Receiver(0, 10)] ✔️
[Trimmer Stage: Receiver(0, 9)] ✔️
[Trimmer Stage: Receiver(0, 8)] ✔️
[Trimmer Stage: Receiver(0, 7)] ✔️
[Trimmer Stage: Receiver(0, 6)] ✔️
[Trimmer Stage: Receiver(0, 5)] ✔️
[Trimmer Stage: Receiver(0, 4)] ✔️
[Trimmer Stage: Receiver(0, 3)] ✔️
[Trimmer Stage: Receiver(0, 2)] ✔️
[Trimmer Stage: Receiver(0, 1)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(3814697265625))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(100000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(5))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(2))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(1))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ we try sorting the transaction list ]
reduced testcases from 888 to 68 bytes (by 93 %) edit distance 831
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 9225623836668461056

TX[0] with tx_sender[36]; tx_receiver[156]; call_value: 0x80000000; length: 324; block+=1; #returns=2
  func: disperseEther(address[],uint256[]) (0xe63d38ed)
  input: { array[1](address(0xc04689c0c5d48cec7275152b3026b53f6f78d03d), ), array[5](uint(2), uint(4398046511104), uint(17), uint(127), uint(1), ),  }
  returns:
    return val: 1; allows reenter: 0; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 0; data: 0x0000000000000000000000000000000000000000000000000000000000000001
TX[1] with tx_sender[43]; tx_receiver[139]; call_value: 0x0; length: 420; block+=1; #returns=0
  func: disperseTokenSimple(address,address[],uint256[]) (0x51ba162c)
  input: { address(0xc2018c3f08417e77b94fb541fed2bf1e09093edd), array[5](address(0xc04689c0c5d48cec7275152b3026b53f6f78d03d), address(0xc3cf2af7ea37d6d9d0a23bdf84c71e8c099d03c2), address(0xcc079239d48f83be71dbbd18487f4acc279ee929), address(0xcc079239d48f83be71dbbd18487f4acc279ee929), address(0xdeadbeefc5d48cec7275152b3026b53f6f78d03d), ), array[3](uint(11), uint(1), uint(1), ),  }
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 1

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=2
  func: disperseEther(address[],uint256[]) (0xe63d38ed)
  input:  [failed to decode]
  returns:
    return val: 1; allows reenter: 0; data: 0x
    return val: 1; allows reenter: 0; data: 0x
