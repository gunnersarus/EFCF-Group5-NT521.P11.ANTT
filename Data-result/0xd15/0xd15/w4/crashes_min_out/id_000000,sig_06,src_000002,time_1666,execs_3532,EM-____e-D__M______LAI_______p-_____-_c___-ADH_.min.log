[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(2)] ✔️
[Trimmer Stage: Transactions(1)] ❌
[Trimmer Stage: Transactions(0)] ✔️
[Trimmer Stage: TransactionWithValue(0)] ✔️
[Trimmer Stage: TransactionHeader(0, CallValue(1000000000000000000))] ✔️
[Trimmer Stage: TransactionHeader(0, CallValue(100000))] ✔️
[Trimmer Stage: TransactionHeader(0, CallValue(100))] ✔️
[Trimmer Stage: TransactionHeader(0, CallValue(1))] ✔️
[Trimmer Stage: TransactionHeader(0, CallValue(0))] ✔️
[Trimmer Stage: TransactionHeader(0, BlockAdvance(0))] ✔️
[Trimmer Stage: Inputs(0, 178)] ✔️
[Trimmer Stage: Inputs(0, 164)] ✔️
[Trimmer Stage: Inputs(0, 132)] ❌
[Trimmer Stage: Inputs(0, 100)] ❌
[Trimmer Stage: Inputs(0, 68)] ✔️
[Trimmer Stage: Inputs(0, 36)] ✔️
[Trimmer Stage: Inputs(0, 4)] ✔️
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(0, 7)] ❌
[Trimmer Stage: Sender(0, 6)] ❌
[Trimmer Stage: Sender(0, 5)] ✔️
[Trimmer Stage: Sender(0, 4)] ✔️
[Trimmer Stage: Sender(0, 3)] ❌
[Trimmer Stage: Sender(0, 2)] ❌
[Trimmer Stage: Sender(0, 1)] ❌
[Trimmer Stage: Sender(0, 0)] ❌
[Trimmer Stage: Receiver(0, 20)] ✔️
[Trimmer Stage: Receiver(0, 19)] ✔️
[Trimmer Stage: Receiver(0, 18)] ✔️
[Trimmer Stage: Receiver(0, 17)] ✔️
[Trimmer Stage: Receiver(0, 16)] ✔️
[Trimmer Stage: Receiver(0, 15)] ✔️
[Trimmer Stage: Receiver(0, 14)] ✔️
[Trimmer Stage: Receiver(0, 13)] ✔️
[Trimmer Stage: Receiver(0, 12)] ✔️
[Trimmer Stage: Receiver(0, 11)] ✔️
[Trimmer Stage: Receiver(0, 10)] ✔️
[Trimmer Stage: Receiver(0, 9)] ✔️
[Trimmer Stage: Receiver(0, 8)] ✔️
[Trimmer Stage: Receiver(0, 7)] ✔️
[Trimmer Stage: Receiver(0, 6)] ✔️
[Trimmer Stage: Receiver(0, 5)] ✔️
[Trimmer Stage: Receiver(0, 4)] ✔️
[Trimmer Stage: Receiver(0, 3)] ✔️
[Trimmer Stage: Receiver(0, 2)] ✔️
[Trimmer Stage: Receiver(0, 1)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(3814697265625))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(100000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(5))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(2))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(1))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ we try sorting the transaction list ]
reduced testcases from 1124 to 60 bytes (by 95 %) edit distance 1079
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 10457395097926139127

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 228; block+=1; #returns=0
  func: disperseTokenSimple(address,address[],uint256[]) (0x51ba162c)
  input: { address(0xc5442b23ea5ca66c3441e62bf6456f010646ae94), array[0](), array[2](uint(1097699280142422972620898207684899649437270855741), uint(1), ),  }
TX[1] with tx_sender[34]; tx_receiver[26]; call_value: 0x3782dace9d900000; length: 356; block+=1; #returns=0
  func: disperseEther(address[],uint256[]) (0xe63d38ed)
  input: { array[1](address(0xc5442b23ea5ca66c3441e62bf6456f010646ae94), ), array[6](uint(67), uint(0), uint(1371149868), uint(0), uint(23), uint(0), ),  }
TX[2] with tx_sender[113]; tx_receiver[0]; call_value: 0x0; length: 452; block+=1; #returns=0
  func: disperseToken(address,address[],uint256[]) (0xc73a2d60)
  input: { address(0xcc079239d48f83be71dbbd18487f4acc279ee929), array[3](address(0xc2018c3f08417e77b94fb541fed2bf1e09093edd), address(0xc2018c3f08417e77b94fb541fed2bf1e09093edd), address(0xc04689c0c5d48cec7275152b3026b53f6f78d03d), ), array[6](uint(18446744073709551615), uint(524288), uint(66637594758529059011086779820223322003589164428755657434011140136), uint(12855504354071922204335696738729300820177623950262342682411008), uint(16), uint(129), ),  }
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 1

TX[0] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: disperseEther(address[],uint256[]) (0xe63d38ed)
  input:  [failed to decode]
