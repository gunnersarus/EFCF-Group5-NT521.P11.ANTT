[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(5)] ✔️
[Trimmer Stage: Transactions(4)] ✔️
[Trimmer Stage: Transactions(3)] ✔️
[Trimmer Stage: Transactions(2)] ❌
[Trimmer Stage: Transactions(1)] ✔️
[Trimmer Stage: Transactions(0)] ❌
[Trimmer Stage: TransactionHeader(1, BlockAdvance(0))] ✔️
[Trimmer Stage: Returns(1, 2)] ✔️
[Trimmer Stage: Returns(1, 1)] ✔️
[Trimmer Stage: Returns(1, 0)] ❌
[Trimmer Stage: ReturnData(1, 0, 176)] ✔️
[Trimmer Stage: ReturnData(1, 0, 160)] ✔️
[Trimmer Stage: ReturnData(1, 0, 128)] ✔️
[Trimmer Stage: ReturnData(1, 0, 96)] ✔️
[Trimmer Stage: ReturnData(1, 0, 64)] ✔️
[Trimmer Stage: ReturnData(1, 0, 32)] ✔️
[Trimmer Stage: ReturnData(1, 0, 0)] ✔️
[Trimmer Stage: Inputs(1, 0)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(1, 7)] ❌
[Trimmer Stage: Sender(1, 6)] ✔️
[Trimmer Stage: Sender(1, 5)] ❌
[Trimmer Stage: Sender(1, 4)] ❌
[Trimmer Stage: Sender(1, 3)] ❌
[Trimmer Stage: Sender(1, 2)] ❌
[Trimmer Stage: Sender(1, 1)] ❌
[Trimmer Stage: Sender(1, 0)] ✔️
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(1, 0)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(3814697265625))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(100000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(5))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(2))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(1))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ sender/receiver selector TX[1] ]
[ we try sorting the transaction list ]
reduced testcases from 1312 to 84 bytes (by 94 %) edit distance 1243
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 9223692471425088308

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: Constructor() (0x8a3c44a5)
  input: {  }
TX[1] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: Constructor() (0x8a3c44a5)
  input: {  }
TX[2] with tx_sender[246]; tx_receiver[0]; call_value: 0x0; length: 4; block+=1; #returns=3
  func: withdraw() (0x3ccfd60b)
  input: {  }
  returns:
    return val: 1; allows reenter: 0; data: 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000008fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20000000000000000000000000000000000000000000000000000000000000012fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000024
    return val: 1; allows reenter: 0; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 0; data: 0x0000000000000000000000000000000000000000000000000000000000000000
TX[3] with tx_sender[175]; tx_receiver[0]; call_value: 0x0; length: 68; block+=1; #returns=5
  func: approve(address,uint256):(bool) (0x95ea7b3)
  input: { address(0xc04689c0c5d48cec7275152b3026b53f6f78d03d), uint(10000000000000001),  }
  returns:
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 1; data: 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 1; data: 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000009000000000000000000000000c3cf2af7ea37d6d9d0a23bdf84c71e8c099d03c2000000000000000000000000c1af1d7e20374a20d4d3914c1a1b0ddfef99cc61000000000000000000000000c04689c0c5d48cec7275152b3026b53f6f78d03d000000000000000000000000c2018c3f08417e77b94fb541fed2bf1e09093edd000000000000000000000000cc079239d48f83be71dbbd18487f4acc279ee929000000000000000000000000c5442b23ea5ca66c3441e62bf6456f010646ae94000000000000000000000000c1af1d7e20374a20d4d3914c1a1b0ddfef99cc61000000000000000000000000c4b803ea8bc30894cc4672a9159ca000d377d9a3000000000000000000000000c3cf2af7ea37d6d9d0a23bdf84c71e8c099d03c2
TX[4] with tx_sender[197]; tx_receiver[0]; call_value: 0x0; length: 100; block+=1; #returns=0
  func: transferFrom(address,address,uint256):(bool) (0x23b872dd)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3), address(0xcf7c6611373327e75f8ef1beef8227afb89816dd), uint(0),  }
TX[5] with tx_sender[53]; tx_receiver[0]; call_value: 0x4; length: 4; block+=1; #returns=0
  func: purchaseTokens() (0x3290ce29)
  input: {  }
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 1

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: Constructor() (0x8a3c44a5)
  input: {  }
TX[1] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=1
  func: withdraw() (0x3ccfd60b)
  input: {  }
  returns:
    return val: 1; allows reenter: 0; data: 0x
