[EthMutator] initialized with dictionary Dict(#values=55, #4bytes=4, #address=9, #bytes=5, #strings=2)
[EthMutator] loaded contract ABI with 20 functions
[EthMutator] Dictionary Update => Dict(#values=97, #4bytes=25, #address=9, #bytes=53, #strings=19) (loaded from file "/tmp/efcf/BitherumToken.src.b72f089bfd6baef09636e3648fb00b7e.qx5j5qh3.fuzz/fuzz/dict/BitherumToken.dict") 
[1;92m[+] [0mLoaded environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mLoaded environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mLoaded environment variable AFL_NO_AFFINITY with value 1[0m
[1;92m[+] [0mLoaded environment variable AFL_BENCH_UNTIL_CRASH with value True[0m
[1;92m[+] [0mLoaded environment variable AFL_NO_UI with value 1[0m
[1;92m[+] [0mLoaded environment variable AFL_CUSTOM_MUTATOR_LIBRARY with value /efcf/src/ethmutator/target/release/libafl_ethmutator.so[0m
[0;36mafl-fuzz++4.01a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mafl++ is maintained by Marc "van Hauser" Heuse, Heiko "hexcoder" EiÃŸfeldt, Andrea Fioraldi and Dominik Maier[0m
[1;92m[+] [0mafl++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: This is v3.x which changes defaults and behaviours - see README.md[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mDisabling the UI because AFL_NO_UI is set.[0m
[1;92m[+] [0mYou have 32 CPU cores and 15 runnable tasks (utilization: 47%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/parallel_fuzzing.md.[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;93m[!] [1;97mWARNING: [0mNot binding to a CPU core (AFL_NO_AFFINITY set).[0m
[1;94m[*] [0mLoading custom mutator library from '/efcf/src/ethmutator/target/release/libafl_ethmutator.so'...[0m
[1;94m[*] [0moptional symbol 'afl_custom_post_process' not found.[0m
[1;94m[*] [0moptional symbol 'afl_custom_havoc_mutation' not found.[0m
[1;94m[*] [0moptional symbol 'afl_custom_havoc_mutation_probability' not found.[0m
[1;94m[*] [0moptional symbol 'afl_custom_queue_new_entry' not found[0m
[1;92m[+] [0mCustom mutator '/efcf/src/ethmutator/target/release/libafl_ethmutator.so' installed successfully.[0m
[1;94m[*] [0mScanning 'seeds'...[0m
[1;92m[+] [0mLoaded a total of 3 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;92m[+] [0m[1;95mPersistent mode binary detected.[0m
[1;92m[+] [0m[1;95mDeferred forkserver binary detected.[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mUsing SHARED MEMORY FUZZING feature.[0m
[1;94m[*] [0mTarget map size: 7337[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from '/tmp/efcf/BitherumToken.src.b72f089bfd6baef09636e3648fb00b7e.qx5j5qh3.fuzz/fuzz/dict/BitherumToken.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 48 extra tokens, size range 1 B to 32 B.[0m
[1;92m[+] [0mLoaded a total of 48 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:receive.bin'...[0m
[1;90m    len = 56, map size = 152, exec speed = 501 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,time:0,execs:0,orig:nullbyte'...[0m
[1;90m    len = 1, map size = 4, exec speed = 359 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000002,time:0,execs:0,orig:fallback.bin'...[0m
[1;90m    len = 56, map size = 145, exec speed = 317 us
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m3 favored, 0 variable, 0 ignored, 3 total
[1;90m       Bitmap range : [0m4 to 152 bits (average: 100.33 bits)
[1;90m        Exec timing : [0m317 to 501 us (average: 392 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 50 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 crashes saved, perf_score=150, exec_us=501, hits=0, map=152, ascii=0)...[0m
[EthMutator] init trim with 56 bytes 56 parsed bytes and 7 expected steps
[EthMutator] trim finish in 28172 Î¼sec with 56 bytes
[EthMutator] new queue entry with 56 bytes and 1 tx - total queue len 1
[EthMutator] starting fuzzing round on FuzzCase with 1 tx with 768 rounds (Some(768) base mutations, Some(60) deterministic round, and 109 additional havocs; fuzzer requested 384 rounds; queue size 1; previously fuzzed 0)
[1;94m[*] [0mFuzzing test case #32 (151 total, 0 crashes saved, perf_score=25, exec_us=1883, hits=9, map=182, ascii=0)...[0m
[EthMutator] init trim with 348 bytes 348 parsed bytes and 9 expected steps
[EthMutator] trim finish in 3456 Î¼sec with 92 bytes
[EthMutator] new queue entry with 92 bytes and 1 tx - total queue len 2
[EthMutator] starting fuzzing round on FuzzCase with 1 tx with 161 rounds (Some(161) base mutations, Some(60) deterministic round, and 23 additional havocs; fuzzer requested 64 rounds; queue size 2; previously fuzzed 0)
[1;94m[*] [0mFuzzing test case #63 (151 total, 0 crashes saved, perf_score=100, exec_us=213, hits=1, map=231, ascii=0)...[0m
[EthMutator] init trim with 400 bytes 400 parsed bytes and 20 expected steps
[EthMutator] trim finish in 4472 Î¼sec with 176 bytes
[EthMutator] new queue entry with 176 bytes and 2 tx - total queue len 3
[EthMutator] starting fuzzing round on FuzzCase with 2 tx with 780 rounds (Some(780) base mutations, Some(120) deterministic round, and 111 additional havocs; fuzzer requested 256 rounds; queue size 3; previously fuzzed 0)
[1;94m[*] [0mFuzzing test case #165 (167 total, 0 crashes saved, perf_score=150, exec_us=165, hits=1, map=245, ascii=0)...[0m
[EthMutator] init trim with 117 bytes 105 parsed bytes and 9 expected steps
[EthMutator] trim finish in 4213 Î¼sec with 105 bytes
[EthMutator] new queue entry with 105 bytes and 2 tx - total queue len 4
[EthMutator] starting fuzzing round on FuzzCase with 2 tx with 969 rounds (Some(969) base mutations, Some(120) deterministic round, and 138 additional havocs; fuzzer requested 384 rounds; queue size 4; previously fuzzed 0)
[1;94m[*] [0mFuzzing test case #22 (197 total, 0 crashes saved, perf_score=100, exec_us=200, hits=14, map=188, ascii=0)...[0m
[EthMutator] init trim with 92 bytes 92 parsed bytes and 8 expected steps
[EthMutator] trim finish in 6934 Î¼sec with 92 bytes
[EthMutator] new queue entry with 92 bytes and 1 tx - total queue len 5
[EthMutator] starting fuzzing round on FuzzCase with 1 tx with 646 rounds (Some(646) base mutations, Some(60) deterministic round, and 92 additional havocs; fuzzer requested 256 rounds; queue size 5; previously fuzzed 0)
[?25h[1;91m

+++ Testing aborted by user +++
[0m[1;94m[*] [0mStatistics: 197 new corpus items found, 15.84% coverage achieved, 0 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 1 min, 7 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m
