[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(2)] ❌
[Trimmer Stage: Transactions(1)] ❌
[Trimmer Stage: Transactions(0)] ❌
[Trimmer Stage: TransactionWithValue(1)] ❌
[Trimmer Stage: TransactionHeader(2, BlockAdvance(2))] ❌
[Trimmer Stage: TransactionHeader(2, BlockAdvance(1))] ❌
[Trimmer Stage: TransactionHeader(2, BlockAdvance(0))] ❌
[Trimmer Stage: TransactionHeader(1, CallValue(1000000000000000000))] ✔️
[Trimmer Stage: TransactionHeader(1, CallValue(100000))] ✔️
[Trimmer Stage: TransactionHeader(1, CallValue(100))] ✔️
[Trimmer Stage: TransactionHeader(1, CallValue(1))] ✔️
[Trimmer Stage: TransactionHeader(1, CallValue(0))] ❌
[Trimmer Stage: TransactionHeader(1, BlockAdvance(0))] ❌
[Trimmer Stage: TransactionHeader(0, BlockAdvance(0))] ❌
[Trimmer Stage: Inputs(2, 0)] ❌
[Trimmer Stage: Inputs(1, 132)] ❌
[Trimmer Stage: Inputs(1, 100)] ❌
[Trimmer Stage: Inputs(1, 68)] ❌
[Trimmer Stage: Inputs(1, 36)] ❌
[Trimmer Stage: Inputs(1, 4)] ❌
[Trimmer Stage: Inputs(1, 0)] ❌
[Trimmer Stage: Inputs(0, 68)] ❌
[Trimmer Stage: Inputs(0, 36)] ❌
[Trimmer Stage: Inputs(0, 4)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(2, 4)] ✔️
[Trimmer Stage: Sender(2, 3)] ❌
[Trimmer Stage: Sender(2, 2)] ❌
[Trimmer Stage: Sender(2, 1)] ❌
[Trimmer Stage: Sender(2, 0)] ❌
[Trimmer Stage: Sender(1, 4)] ✔️
[Trimmer Stage: Sender(1, 3)] ❌
[Trimmer Stage: Sender(1, 2)] ❌
[Trimmer Stage: Sender(1, 1)] ❌
[Trimmer Stage: Sender(1, 0)] ❌
[Trimmer Stage: Sender(0, 4)] ✔️
[Trimmer Stage: Sender(0, 3)] ❌
[Trimmer Stage: Sender(0, 2)] ❌
[Trimmer Stage: Sender(0, 1)] ❌
[Trimmer Stage: Sender(0, 0)] ❌
[Trimmer Stage: Receiver(2, 1)] ✔️
[Trimmer Stage: Receiver(2, 0)] ✔️
[Trimmer Stage: Receiver(1, 1)] ✔️
[Trimmer Stage: Receiver(1, 0)] ✔️
[Trimmer Stage: Receiver(0, 1)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(Difficulty(100000))] ✔️
[Trimmer Stage: BlockHeader(Difficulty(10000))] ✔️
[Trimmer Stage: BlockHeader(Difficulty(10))] ✔️
[Trimmer Stage: BlockHeader(Difficulty(5))] ✔️
[Trimmer Stage: BlockHeader(Difficulty(2))] ✔️
[Trimmer Stage: BlockHeader(Difficulty(1))] ✔️
[Trimmer Stage: BlockHeader(Difficulty(0))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(100000))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(10000))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(10))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(5))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(2))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(1))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(0))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(100000))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(10000))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(10))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(5))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(2))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(1))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(3814697265625))] ❌
[Trimmer Stage: BlockHeader(InitialEther(100000))] ❌
[Trimmer Stage: BlockHeader(InitialEther(10000))] ❌
[Trimmer Stage: BlockHeader(InitialEther(10))] ❌
[Trimmer Stage: BlockHeader(InitialEther(5))] ❌
[Trimmer Stage: BlockHeader(InitialEther(2))] ❌
[Trimmer Stage: BlockHeader(InitialEther(1))] ❌
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ sender/receiver selector TX[1] ]
[ sender/receiver selector TX[2] ]
[ we try sorting the transaction list ]
reduced testcases from 356 to 356 bytes (by 0 %) edit distance 35
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 72340172838076673
  gas_limit: 72340172838076673
  timestamp: 72340172838076673
  initial_ether: 17111844134756286721

TX[0] with tx_sender[4]; tx_receiver[1]; call_value: 0x0; length: 100; block+=1; #returns=0
  func: signup(string) (0x519c6377)
  input: { string[32]("\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{4}"),  }
TX[1] with tx_sender[4]; tx_receiver[1]; call_value: 0x191c87b5e5ee5000000000000000000; length: 164; block+=1; #returns=0
  func: deposit(uint256,address,string) (0xd53d5885)
  input: { uint(0), address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3), string[32]("\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{4}"),  }
TX[2] with tx_sender[4]; tx_receiver[1]; call_value: 0x0; length: 4; block+=5; #returns=0
  func: withdraw() (0x3ccfd60b)
  input: {  }
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 17111844134756286721

TX[0] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 100; block+=1; #returns=0
  func: signup(string) (0x519c6377)
  input: { string[32]("\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{4}"),  }
TX[1] with tx_sender[4]; tx_receiver[0]; call_value: 0x1; length: 164; block+=1; #returns=0
  func: deposit(uint256,address,string) (0xd53d5885)
  input: { uint(0), address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3), string[32]("\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{4}"),  }
TX[2] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 4; block+=5; #returns=0
  func: withdraw() (0x3ccfd60b)
  input: {  }
