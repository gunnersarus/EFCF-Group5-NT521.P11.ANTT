[EthMutator] initialized with dictionary Dict(#values=55, #4bytes=4, #address=9, #bytes=5, #strings=2)
[EthMutator] loaded contract ABI with 7 functions
[EthMutator] Dictionary Update => Dict(#values=73, #4bytes=12, #address=9, #bytes=26, #strings=12) (loaded from file "/tmp/efcf-fuzz/multi_gen_5.mode-2AT.10.NjXS7E.fuzz/fuzz/dict/multi_gen_5.dict") 
[1;92m[+] [0mLoaded environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mLoaded environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mLoaded environment variable AFL_NO_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_CUSTOM_MUTATOR=1, did you mean AFL_USE_CUSTOM_MUTATOR=1?[0m
[1;92m[+] [0mLoaded environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mLoaded environment variable AFL_NO_UI with value 1[0m
[1;92m[+] [0mLoaded environment variable AFL_CUSTOM_MUTATOR_LIBRARY with value /efcf/src/ethmutator/target/release/libafl_ethmutator.so[0m
[0;36mafl-fuzz++4.01a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mafl++ is maintained by Marc "van Hauser" Heuse, Heiko "hexcoder" EiÃŸfeldt, Andrea Fioraldi and Dominik Maier[0m
[1;92m[+] [0mafl++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: This is v3.x which changes defaults and behaviours - see README.md[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing rare edge focus power schedule (RARE)[0m
[1;92m[+] [0mCmpLog level: 2[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m
[1;92m[+] [0mDisabling the UI because AFL_NO_UI is set.[0m
[1;92m[+] [0mYou have 8 CPU cores and 4 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/parallel_fuzzing.md.[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;93m[!] [1;97mWARNING: [0mNot binding to a CPU core (AFL_NO_AFFINITY set).[0m
[1;94m[*] [0mLoading custom mutator library from '/efcf/src/ethmutator/target/release/libafl_ethmutator.so'...[0m
[1;94m[*] [0moptional symbol 'afl_custom_post_process' not found.[0m
[1;94m[*] [0moptional symbol 'afl_custom_havoc_mutation' not found.[0m
[1;94m[*] [0moptional symbol 'afl_custom_havoc_mutation_probability' not found.[0m
[1;94m[*] [0moptional symbol 'afl_custom_queue_new_entry' not found[0m
[1;92m[+] [0mCustom mutator '/efcf/src/ethmutator/target/release/libafl_ethmutator.so' installed successfully.[0m
[1;94m[*] [0mScanning 'seeds'...[0m
[1;92m[+] [0mLoaded a total of 3 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;92m[+] [0m[1;95mPersistent mode binary detected.[0m
[1;92m[+] [0m[1;95mDeferred forkserver binary detected.[0m
[1;94m[*] [0mValidating target binary...[0m
[1;92m[+] [0m[1;95mPersistent mode binary detected.[0m
[1;92m[+] [0m[1;95mDeferred forkserver binary detected.[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mUsing SHARED MEMORY FUZZING feature.[0m
[1;94m[*] [0mTarget map size: 5761[0m
[1;94m[*] [0mSpawning cmplog forkserver[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mUsing SHARED MEMORY FUZZING feature.[0m
[1;94m[*] [0mTarget map size: 13873[0m
[1;92m[+] [0mCmplog forkserver successfully started[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from '/tmp/efcf-fuzz/multi_gen_5.mode-2AT.10.NjXS7E.fuzz/fuzz/dict/multi_gen_5.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 21 extra tokens, size range 1 B to 32 B.[0m
[1;92m[+] [0mLoaded a total of 21 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:receive.bin'...[0m
[1;90m    len = 56, map size = 117, exec speed = 172 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,time:0,execs:0,orig:nullbyte'...[0m
[1;90m    len = 1, map size = 4, exec speed = 128 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000002,time:0,execs:0,orig:fallback.bin'...[0m
[1;90m    len = 56, map size = 122, exec speed = 190 us
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m3 favored, 0 variable, 0 ignored, 3 total
[1;90m       Bitmap range : [0m4 to 122 bits (average: 81.00 bits)
[1;90m        Exec timing : [0m128 to 190 us (average: 163 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 50 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 crashes saved, perf_score=1330, exec_us=190, hits=0, map=122, ascii=1)...[0m
[EthMutator] init trim with 56 bytes 56 parsed bytes and 6 expected steps
[EthMutator] trim finish in 1313 Î¼sec with 56 bytes
[EthMutator] new queue entry with 56 bytes and 1 tx - total queue len 1
[EthMutator] starting fuzzing round on FuzzCase with 1 tx with 6808 rounds (Some(6808) base mutations, Some(60) deterministic round, and 972 additional havocs; fuzzer requested 3404 rounds; queue size 1; previously fuzzed 0)
[EthMutator][CMPTRACE] tracing => 0 traces in 9357 Î¼sec; processing => 4 Î¼sec; obtained 0 new values => Dict(#values=73, #4bytes=12, #address=9, #bytes=26, #strings=12)
[1;94m[*] [0mFuzzing test case #46 (65 total, 0 crashes saved, perf_score=229, exec_us=121, hits=1, map=156, ascii=0)...[0m
[EthMutator] init trim with 74 bytes 74 parsed bytes and 7 expected steps
[EthMutator] trim finish in 1138 Î¼sec with 74 bytes
[EthMutator] new queue entry with 74 bytes and 1 tx - total queue len 2
[EthMutator] starting fuzzing round on FuzzCase with 1 tx with 1479 rounds (Some(1479) base mutations, Some(60) deterministic round, and 211 additional havocs; fuzzer requested 586 rounds; queue size 2; previously fuzzed 0)
[EthMutator][CMPTRACE] tracing => 0 traces in 8416 Î¼sec; processing => 1 Î¼sec; obtained 0 new values => Dict(#values=73, #4bytes=12, #address=9, #bytes=26, #strings=12)
[1;94m[*] [0mFuzzing test case #31 (65 total, 0 crashes saved, perf_score=119, exec_us=104, hits=2, map=168, ascii=0)...[0m
[EthMutator] init trim with 112 bytes 112 parsed bytes and 8 expected steps
[EthMutator] trim finish in 6606 Î¼sec with 92 bytes
[EthMutator] new queue entry with 92 bytes and 1 tx - total queue len 3
[EthMutator] starting fuzzing round on FuzzCase with 1 tx with 767 rounds (Some(767) base mutations, Some(60) deterministic round, and 109 additional havocs; fuzzer requested 304 rounds; queue size 3; previously fuzzed 0)
[EthMutator][CMPTRACE] tracing => 0 traces in 8001 Î¼sec; processing => 1 Î¼sec; obtained 0 new values => Dict(#values=73, #4bytes=12, #address=9, #bytes=26, #strings=12)
[1;94m[*] [0mFuzzing test case #10 (65 total, 0 crashes saved, perf_score=359, exec_us=135, hits=171, map=181, ascii=0)...[0m
[EthMutator] init trim with 252 bytes 252 parsed bytes and 8 expected steps
[EthMutator] trim finish in 6136 Î¼sec with 252 bytes
[EthMutator] new queue entry with 252 bytes and 1 tx - total queue len 4
[EthMutator] starting fuzzing round on FuzzCase with 1 tx with 2319 rounds (Some(2319) base mutations, Some(60) deterministic round, and 331 additional havocs; fuzzer requested 919 rounds; queue size 4; previously fuzzed 0)
[EthMutator][CMPTRACE] tracing => 0 traces in 7764 Î¼sec; processing => 2 Î¼sec; obtained 0 new values => Dict(#values=73, #4bytes=12, #address=9, #bytes=26, #strings=12)
[1;94m[*] [0mFuzzing test case #27 (65 total, 0 crashes saved, perf_score=129, exec_us=160, hits=2, map=223, ascii=1)...[0m
[EthMutator] init trim with 256 bytes 256 parsed bytes and 11 expected steps
[EthMutator] trim finish in 10081 Î¼sec with 240 bytes
[EthMutator] new queue entry with 240 bytes and 2 tx - total queue len 5
[?25h[1;91m

+++ Testing aborted by user +++
[0m[1;94m[*] [0mStatistics: 41 new corpus items found, 8.68% coverage achieved, 0 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 2 min, 55 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m
