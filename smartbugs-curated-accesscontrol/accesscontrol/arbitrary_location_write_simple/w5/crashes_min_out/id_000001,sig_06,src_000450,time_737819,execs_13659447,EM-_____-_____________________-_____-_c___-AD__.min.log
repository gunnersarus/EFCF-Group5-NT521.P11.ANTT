[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(10)] ❌
[Trimmer Stage: Transactions(9)] ❌
[Trimmer Stage: Transactions(8)] ❌
[Trimmer Stage: Transactions(7)] ✔️
[Trimmer Stage: Transactions(6)] ❌
[Trimmer Stage: Transactions(5)] ❌
[Trimmer Stage: Transactions(4)] ❌
[Trimmer Stage: Transactions(3)] ✔️
[Trimmer Stage: Transactions(2)] ✔️
[Trimmer Stage: Transactions(1)] ✔️
[Trimmer Stage: Transactions(0)] ✔️
[Trimmer Stage: Inputs(5, 0)] ❌
[Trimmer Stage: Inputs(4, 4)] ❌
[Trimmer Stage: Inputs(4, 0)] ❌
[Trimmer Stage: Inputs(3, 0)] ❌
[Trimmer Stage: Inputs(2, 4)] ✔️
[Trimmer Stage: Inputs(2, 0)] ❌
[Trimmer Stage: Inputs(1, 36)] ❌
[Trimmer Stage: Inputs(1, 4)] ❌
[Trimmer Stage: Inputs(1, 0)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(5, 0)] ✔️
[Trimmer Stage: Sender(4, 0)] ✔️
[Trimmer Stage: Sender(3, 0)] ✔️
[Trimmer Stage: Sender(2, 0)] ✔️
[Trimmer Stage: Sender(1, 0)] ✔️
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(5, 0)] ✔️
[Trimmer Stage: Receiver(4, 0)] ✔️
[Trimmer Stage: Receiver(3, 0)] ✔️
[Trimmer Stage: Receiver(2, 0)] ✔️
[Trimmer Stage: Receiver(1, 0)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ sender/receiver selector TX[1] ]
[ sender/receiver selector TX[2] ]
[ sender/receiver selector TX[3] ]
[ sender/receiver selector TX[4] ]
[ sender/receiver selector TX[5] ]
[ we try sorting the transaction list ]
reduced testcases from 408 to 256 bytes (by 38 %) edit distance 299
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 0

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: PopBonusCode() (0x7adde4ef)
  input: {  }
TX[1] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 0; block+=0; #returns=0
  input: 
TX[2] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: PushBonusCode(uint256) (0xfd10d655)
  input: { uint(1000000000000000000),  }
TX[3] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 0; block+=0; #returns=0
  input: 
TX[4] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: PopBonusCode() (0x7adde4ef)
  input: {  }
TX[5] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 68; block+=0; #returns=0
  func: UpdateBonusCodeAt(uint256,uint256) (0x4f798da7)
  input: { uint(97222658762210312835982718871080339316596872691747246639997364149093866936989), uint(97222658762210312835982718871080339316596872691747246639997364149093866936990),  }
TX[6] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: PushBonusCode(uint256) (0xfd10d655)
  input: { uint(383123885216472214589586756787577295904684780545900544),  }
TX[7] with tx_sender[0]; tx_receiver[0]; call_value: 0x6fe4dd7a00000000000000000000000000; length: 0; block+=0; #returns=0
  input: 
TX[8] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: PopBonusCode() (0x7adde4ef)
  input: {  }
TX[9] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: PushBonusCode(uint256) (0xfd10d655)
  input: { uint(1097699280142422972620898207684899649437270855741),  }
TX[10] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: Destroy() (0xf58fef8e)
  input: {  }
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 0

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: PopBonusCode() (0x7adde4ef)
  input: {  }
TX[1] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 68; block+=0; #returns=0
  func: UpdateBonusCodeAt(uint256,uint256) (0x4f798da7)
  input: { uint(97222658762210312835982718871080339316596872691747246639997364149093866936989), uint(97222658762210312835982718871080339316596872691747246639997364149093866936990),  }
TX[2] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: PushBonusCode(uint256) (0xfd10d655)
  input:  [failed to decode]
TX[3] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: PopBonusCode() (0x7adde4ef)
  input: {  }
TX[4] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: PushBonusCode(uint256) (0xfd10d655)
  input: { uint(1097699280142422972620898207684899649437270855741),  }
TX[5] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: Destroy() (0xf58fef8e)
  input: {  }
