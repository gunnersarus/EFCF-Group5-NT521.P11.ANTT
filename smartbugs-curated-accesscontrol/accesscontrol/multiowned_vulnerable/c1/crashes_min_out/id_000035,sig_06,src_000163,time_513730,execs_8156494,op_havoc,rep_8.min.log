[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(8)] ✔️
[Trimmer Stage: Transactions(7)] ✔️
[Trimmer Stage: Transactions(6)] ✔️
[Trimmer Stage: Transactions(5)] ✔️
[Trimmer Stage: Transactions(4)] ✔️
[Trimmer Stage: Transactions(3)] ❌
[Trimmer Stage: Transactions(2)] ✔️
[Trimmer Stage: Transactions(1)] ❌
[Trimmer Stage: Transactions(0)] ✔️
[Trimmer Stage: Returns(1, 0)] ❌
[Trimmer Stage: Inputs(1, 0)] ❌
[Trimmer Stage: Inputs(0, 4)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(1, 2)] ✔️
[Trimmer Stage: Sender(1, 1)] ❌
[Trimmer Stage: Sender(1, 0)] ❌
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(1, 0)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(3814697265625))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(100000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(5))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(2))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(1))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ sender/receiver selector TX[1] ]
[ we try sorting the transaction list ]
reduced testcases from 584 to 116 bytes (by 81 %) edit distance 517
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 6062970998347530240

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 0; block+=0; #returns=0
  input: 
TX[1] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc2018c3f08417e77b94fb541fed2bf1e09093edd),  }
TX[2] with tx_sender[0]; tx_receiver[0]; call_value: 0x1c00000000000000000000000000000000; length: 0; block+=0; #returns=0
  input: 
TX[3] with tx_sender[2]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=1
  func: withdrawAll() (0x853828b6)
  input: {  }
  returns:
    return val: 1; allows reenter: 0; data: 0x
TX[4] with tx_sender[2]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=1
  func: withdrawAll() (0x853828b6)
  input: {  }
  returns:
    return val: 1; allows reenter: 0; data: 0x
TX[5] with tx_sender[2]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=1
  func: withdrawAll() (0x853828b6)
  input: {  }
  returns:
    return val: 1; allows reenter: 0; data: 0x
TX[6] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc1af1d7e20374a20d4d3914c1a1b0ddfef99cc00),  }
TX[7] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 16; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: 000000000000000000000000  [failed to decode]
TX[8] with tx_sender[32]; tx_receiver[126]; call_value: 0x5f0d1b1a4c91d3d4000000000000000000; length: 288; block+=55; #returns=0
  func: fallback()
  input: ef99cc6124000000010000000000000000000000859524540000000000000000 00000000c1af1d7e20374a20d4d3914c1a1b0ddfef99cc612400000000000000 000000000000000085950000000000000000000000000000c1af1d7e20374a20 d4d3914c1a1b0ddfef99cc622400000000000000000000000000d80085952454 000000000000000000000000c1af1d7e20374a20d4d3914c1a1b0ddfef99cc61 04000100010000000000000000000000853828b6010000002400000000000000 00000000000000008595245400000000000000000000ea00cc079239d48f83be 71dbd118487f4acc279ee92924000000010000000000000000000000cd5c4c70 000000000000000000000000c5442b23ea5ca66c3441e62bf6456f010646ae94 
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 1

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc2018c3f08417e77b94fb541fed2bf1e09093edd),  }
TX[1] with tx_sender[2]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=1
  func: withdrawAll() (0x853828b6)
  input: {  }
  returns:
    return val: 1; allows reenter: 0; data: 0x
