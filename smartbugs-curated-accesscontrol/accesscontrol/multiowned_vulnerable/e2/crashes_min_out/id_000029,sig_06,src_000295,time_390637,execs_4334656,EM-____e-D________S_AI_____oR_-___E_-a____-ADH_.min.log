[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(7)] ✔️
[Trimmer Stage: Transactions(6)] ✔️
[Trimmer Stage: Transactions(5)] ✔️
[Trimmer Stage: Transactions(4)] ✔️
[Trimmer Stage: Transactions(3)] ✔️
[Trimmer Stage: Transactions(2)] ❌
[Trimmer Stage: Transactions(1)] ✔️
[Trimmer Stage: Transactions(0)] ❌
[Trimmer Stage: Inputs(1, 0)] ❌
[Trimmer Stage: Inputs(0, 4)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(1, 4)] ✔️
[Trimmer Stage: Sender(1, 3)] ❌
[Trimmer Stage: Sender(1, 2)] ❌
[Trimmer Stage: Sender(1, 1)] ❌
[Trimmer Stage: Sender(1, 0)] ❌
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(1, 0)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(3814697265625))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(100000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(5))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(2))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(1))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ sender/receiver selector TX[1] ]
[ we try sorting the transaction list ]
reduced testcases from 853 to 112 bytes (by 87 %) edit distance 751
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 9223442405598953472

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3),  }
TX[1] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 21; block+=0; #returns=7
  func: owners(address):(address) (0x22914a7)
  input: 000000010000000000000000000008fc00  [failed to decode]
  returns:
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 1; data: 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000e
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000001
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000001
    return val: 1; allows reenter: 1; data: 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000004000000000000000000000000000cc079239d48f83be71dbbd18487f4acc279ee929000000000000000000000000deadbeefc5d48cec7275152b3026b53f6f78d03d000000000000000000000000c5442b23ea5ca66c3441e62bf6456f010646ae94
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000001
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000001
TX[2] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: withdrawAll() (0x853828b6)
  input: {  }
TX[3] with tx_sender[64]; tx_receiver[0]; call_value: 0x0; length: 36; block+=1; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc1af1d7e20374a20d4d3914c1a1b0ddfef99cc61),  }
TX[4] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xcf7c6611373327e75f8ef1beef8227afb89816dd),  }
TX[5] with tx_sender[102]; tx_receiver[0]; call_value: 0x0; length: 36; block+=1; #returns=0
  func: deleteOwner(address):(bool) (0xcd5c4c70)
  input: { address(0xc04689c0c5d48cec7275152b3026b53f6f78d03d),  }
TX[6] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: withdrawAll() (0x853828b6)
  input: {  }
TX[7] with tx_sender[227]; tx_receiver[91]; call_value: 0x0; length: 4; block+=1; #returns=0
  func: withdrawAll() (0x853828b6)
  input: {  }
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 1

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3),  }
TX[1] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: withdrawAll() (0x853828b6)
  input: {  }
