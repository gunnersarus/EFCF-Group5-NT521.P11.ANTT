[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(6)] ❌
[Trimmer Stage: Transactions(5)] ✔️
[Trimmer Stage: Transactions(4)] ❌
[Trimmer Stage: Transactions(3)] ✔️
[Trimmer Stage: Transactions(2)] ✔️
[Trimmer Stage: Transactions(1)] ✔️
[Trimmer Stage: Transactions(0)] ✔️
[Trimmer Stage: TransactionHeader(1, BlockAdvance(0))] ✔️
[Trimmer Stage: Inputs(1, 0)] ❌
[Trimmer Stage: Inputs(0, 4)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(1, 7)] ❌
[Trimmer Stage: Sender(1, 6)] ❌
[Trimmer Stage: Sender(1, 5)] ✔️
[Trimmer Stage: Sender(1, 4)] ❌
[Trimmer Stage: Sender(1, 3)] ❌
[Trimmer Stage: Sender(1, 2)] ❌
[Trimmer Stage: Sender(1, 1)] ❌
[Trimmer Stage: Sender(1, 0)] ❌
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(1, 0)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(5))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(2))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(1))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ sender/receiver selector TX[1] ]
[ we try sorting the transaction list ]
reduced testcases from 268 to 112 bytes (by 59 %) edit distance 195
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 8

TX[0] with tx_sender[1]; tx_receiver[0]; call_value: 0x2000000000000000000000000000000000; length: 0; block+=0; #returns=0
  input: 
TX[1] with tx_sender[0]; tx_receiver[0]; call_value: 0x1; length: 0; block+=0; #returns=0
  input: 
TX[2] with tx_sender[74]; tx_receiver[130]; call_value: 0x0; length: 36; block+=1; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xcc079239d48f83be71dbbd18487f4acc279ee929),  }
TX[3] with tx_sender[0]; tx_receiver[0]; call_value: 0x1; length: 0; block+=0; #returns=1
  input: 
  returns:
    return val: 1; allows reenter: 2; data: 0x0000000000000000000000000000000000000000000000000000000000000001
TX[4] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc5442b23ea5ca66c3441e62bf6456f010646ae94),  }
TX[5] with tx_sender[1]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: owners(address):(address) (0x22914a7)
  input:  [failed to decode]
TX[6] with tx_sender[191]; tx_receiver[0]; call_value: 0x0; length: 4; block+=1; #returns=0
  func: withdrawAll() (0x853828b6)
  input: {  }
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 1

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc5442b23ea5ca66c3441e62bf6456f010646ae94),  }
TX[1] with tx_sender[5]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: withdrawAll() (0x853828b6)
  input: {  }
