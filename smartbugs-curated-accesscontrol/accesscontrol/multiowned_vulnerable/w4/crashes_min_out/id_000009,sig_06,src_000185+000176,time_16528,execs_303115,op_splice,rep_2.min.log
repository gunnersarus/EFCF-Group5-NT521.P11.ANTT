[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(10)] ✔️
[Trimmer Stage: Transactions(9)] ✔️
[Trimmer Stage: Transactions(8)] ✔️
[Trimmer Stage: Transactions(7)] ✔️
[Trimmer Stage: Transactions(6)] ✔️
[Trimmer Stage: Transactions(5)] ❌
[Trimmer Stage: Transactions(4)] ✔️
[Trimmer Stage: Transactions(3)] ✔️
[Trimmer Stage: Transactions(2)] ❌
[Trimmer Stage: Transactions(1)] ✔️
[Trimmer Stage: Transactions(0)] ✔️
[Trimmer Stage: TransactionHeader(1, BlockAdvance(0))] ✔️
[Trimmer Stage: Returns(0, 1)] ✔️
[Trimmer Stage: Returns(0, 0)] ✔️
[Trimmer Stage: Inputs(1, 0)] ❌
[Trimmer Stage: Inputs(0, 4)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(1, 7)] ❌
[Trimmer Stage: Sender(1, 6)] ❌
[Trimmer Stage: Sender(1, 5)] ❌
[Trimmer Stage: Sender(1, 4)] ✔️
[Trimmer Stage: Sender(1, 3)] ❌
[Trimmer Stage: Sender(1, 2)] ❌
[Trimmer Stage: Sender(1, 1)] ❌
[Trimmer Stage: Sender(1, 0)] ❌
[Trimmer Stage: Sender(0, 4)] ✔️
[Trimmer Stage: Sender(0, 3)] ✔️
[Trimmer Stage: Sender(0, 2)] ✔️
[Trimmer Stage: Sender(0, 1)] ✔️
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(1, 20)] ✔️
[Trimmer Stage: Receiver(1, 19)] ✔️
[Trimmer Stage: Receiver(1, 18)] ✔️
[Trimmer Stage: Receiver(1, 17)] ✔️
[Trimmer Stage: Receiver(1, 16)] ✔️
[Trimmer Stage: Receiver(1, 15)] ✔️
[Trimmer Stage: Receiver(1, 14)] ✔️
[Trimmer Stage: Receiver(1, 13)] ✔️
[Trimmer Stage: Receiver(1, 12)] ✔️
[Trimmer Stage: Receiver(1, 11)] ✔️
[Trimmer Stage: Receiver(1, 10)] ✔️
[Trimmer Stage: Receiver(1, 9)] ✔️
[Trimmer Stage: Receiver(1, 8)] ✔️
[Trimmer Stage: Receiver(1, 7)] ✔️
[Trimmer Stage: Receiver(1, 6)] ✔️
[Trimmer Stage: Receiver(1, 5)] ✔️
[Trimmer Stage: Receiver(1, 4)] ✔️
[Trimmer Stage: Receiver(1, 3)] ✔️
[Trimmer Stage: Receiver(1, 2)] ✔️
[Trimmer Stage: Receiver(1, 1)] ✔️
[Trimmer Stage: Receiver(1, 0)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(100000))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(10000))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(10))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(5))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(2))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(1))] ✔️
[Trimmer Stage: BlockHeader(GasLimit(0))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(100000))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(10000))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(10))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(5))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(2))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(1))] ✔️
[Trimmer Stage: BlockHeader(TimeStamp(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(3814697265625))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(100000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(5))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(2))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(1))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ sender/receiver selector TX[1] ]
[ we try sorting the transaction list ]
reduced testcases from 741 to 112 bytes (by 85 %) edit distance 682
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 7306357454944600064
  timestamp: 7306357456645743973
  initial_ether: 7306357456645743973

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 101; block+=0; #returns=0
  func: fallback()
  input: 0000000000000000000000000000000000000000002400000000000000000000 000000000085952454000000000000000000000000c4b803ea8bc30894000000 0000000000000000000000000000000000000000000000000000000000000000 0000000000 
TX[1] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 0; block+=0; #returns=0
  input: 
TX[2] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=2
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3),  }
  returns:
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 2; data: 0x0000000000000000000000000000000000000000000000000000000000000000
TX[3] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3),  }
TX[4] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=2
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3),  }
  returns:
    return val: 1; allows reenter: 1; data: 0x
    return val: 1; allows reenter: 0; data: 0x0000000000000000000000000000000000000000000000000000000000000000
TX[5] with tx_sender[124]; tx_receiver[46]; call_value: 0x0; length: 4; block+=1; #returns=0
  func: withdrawAll() (0x853828b6)
  input: {  }
TX[6] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3),  }
TX[7] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3),  }
TX[8] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3),  }
TX[9] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: deleteOwner(address):(bool) (0xcd5c4c70)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3),  }
TX[10] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=2
  func: withdrawAll() (0x853828b6)
  input: {  }
  returns:
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 1; data: 0x000000000000000000000000
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 1

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc4b803ea8bc30894cc4672a9159ca000d377d9a3),  }
TX[1] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: withdrawAll() (0x853828b6)
  input: {  }
