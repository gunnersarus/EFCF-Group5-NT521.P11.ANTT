[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(15)] ✔️
[Trimmer Stage: Transactions(14)] ✔️
[Trimmer Stage: Transactions(13)] ✔️
[Trimmer Stage: Transactions(12)] ✔️
[Trimmer Stage: Transactions(11)] ❌
[Trimmer Stage: Transactions(10)] ✔️
[Trimmer Stage: Transactions(9)] ✔️
[Trimmer Stage: Transactions(8)] ✔️
[Trimmer Stage: Transactions(7)] ✔️
[Trimmer Stage: Transactions(6)] ✔️
[Trimmer Stage: Transactions(5)] ❌
[Trimmer Stage: Transactions(4)] ✔️
[Trimmer Stage: Transactions(3)] ✔️
[Trimmer Stage: Transactions(2)] ✔️
[Trimmer Stage: Transactions(1)] ✔️
[Trimmer Stage: Transactions(0)] ✔️
[Trimmer Stage: Inputs(1, 0)] ❌
[Trimmer Stage: Inputs(0, 4)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(1, 5)] ✔️
[Trimmer Stage: Sender(1, 4)] ❌
[Trimmer Stage: Sender(1, 3)] ❌
[Trimmer Stage: Sender(1, 2)] ❌
[Trimmer Stage: Sender(1, 1)] ❌
[Trimmer Stage: Sender(1, 0)] ❌
[Trimmer Stage: Sender(0, 1)] ✔️
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(1, 0)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(3814697265625))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(100000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(5))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(2))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(1))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ sender/receiver selector TX[1] ]
[ we try sorting the transaction list ]
reduced testcases from 512 to 112 bytes (by 79 %) edit distance 440
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 264982302228480

TX[0] with tx_sender[1]; tx_receiver[1]; call_value: 0x0; length: 18; block+=0; #returns=0
  func: owners(address):(address) (0x22914a7)
  input: 00000000914d0000000000000000  [failed to decode]
TX[1] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 0; block+=0; #returns=0
  input: 
TX[2] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 0; block+=0; #returns=0
  input: 
TX[3] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 0; block+=1; #returns=0
  input: 
TX[4] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 0; block+=0; #returns=0
  input: 
TX[5] with tx_sender[1]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc5442b23ea5ca66c3441e62bf6456f010646ae94),  }
TX[6] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 0; block+=0; #returns=0
  input: 
TX[7] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 0; block+=0; #returns=0
  input: 
TX[8] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc2018c3f08417e77b94f0080fed2bf1e09093edd),  }
TX[9] with tx_sender[0]; tx_receiver[0]; call_value: 0x7200000205800000000000000000000000; length: 0; block+=0; #returns=0
  input: 
TX[10] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc2018c3f08417e77b94fb541fed2bf1e09093edd),  }
TX[11] with tx_sender[5]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: withdrawAll() (0x853828b6)
  input: {  }
TX[12] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc5442b23ea5ca66c3441e62bf6456f010646ae94),  }
TX[13] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc3cf2af7ea37d6d9d0a23bdf84c71e8c099d03c2),  }
TX[14] with tx_sender[5]; tx_receiver[0]; call_value: 0x1; length: 0; block+=0; #returns=0
  input: 
TX[15] with tx_sender[2]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=1
  func: withdrawAll() (0x853828b6)
  input: {  }
  returns:
    return val: 1; allows reenter: 0; data: 0x000000000000
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 1

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: newOwner(address):(bool) (0x85952454)
  input: { address(0xc5442b23ea5ca66c3441e62bf6456f010646ae94),  }
TX[1] with tx_sender[5]; tx_receiver[0]; call_value: 0x0; length: 4; block+=0; #returns=0
  func: withdrawAll() (0x853828b6)
  input: {  }
