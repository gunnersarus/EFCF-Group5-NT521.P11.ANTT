[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(0)] ❌
[Trimmer Stage: TransactionHeader(0, BlockAdvance(0))] ✔️
[Trimmer Stage: Inputs(0, 164)] ✔️
[Trimmer Stage: Inputs(0, 132)] ✔️
[Trimmer Stage: Inputs(0, 100)] ✔️
[Trimmer Stage: Inputs(0, 68)] ✔️
[Trimmer Stage: Inputs(0, 36)] ❌
[Trimmer Stage: Inputs(0, 4)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(0, 7)] ✔️
[Trimmer Stage: Sender(0, 6)] ✔️
[Trimmer Stage: Sender(0, 5)] ✔️
[Trimmer Stage: Sender(0, 4)] ✔️
[Trimmer Stage: Sender(0, 3)] ✔️
[Trimmer Stage: Sender(0, 2)] ✔️
[Trimmer Stage: Sender(0, 1)] ✔️
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(0, 20)] ✔️
[Trimmer Stage: Receiver(0, 19)] ✔️
[Trimmer Stage: Receiver(0, 18)] ✔️
[Trimmer Stage: Receiver(0, 17)] ✔️
[Trimmer Stage: Receiver(0, 16)] ✔️
[Trimmer Stage: Receiver(0, 15)] ✔️
[Trimmer Stage: Receiver(0, 14)] ✔️
[Trimmer Stage: Receiver(0, 13)] ✔️
[Trimmer Stage: Receiver(0, 12)] ✔️
[Trimmer Stage: Receiver(0, 11)] ✔️
[Trimmer Stage: Receiver(0, 10)] ✔️
[Trimmer Stage: Receiver(0, 9)] ✔️
[Trimmer Stage: Receiver(0, 8)] ✔️
[Trimmer Stage: Receiver(0, 7)] ✔️
[Trimmer Stage: Receiver(0, 6)] ✔️
[Trimmer Stage: Receiver(0, 5)] ✔️
[Trimmer Stage: Receiver(0, 4)] ✔️
[Trimmer Stage: Receiver(0, 3)] ✔️
[Trimmer Stage: Receiver(0, 2)] ✔️
[Trimmer Stage: Receiver(0, 1)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ we try sorting the transaction list ]
reduced testcases from 252 to 124 bytes (by 51 %) edit distance 132
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 0

TX[0] with tx_sender[234]; tx_receiver[117]; call_value: 0x0; length: 196; block+=1; #returns=0
  func: forward(address,bytes) (0x6fadcf72)
  input: { address(0xc3cf2af7ea37d6d9d0a23bdf84c71e8c099d03c2), bytes[96](0x1ab7c64e24eea0386ec1f3182127c8538437d4cb7e6d190c17e38f77a194325b8713460a92c2028fa96ebfb70253cf6193d2ae806d61cb832f7e20d17b4eca5d8e1eb95b190770d1fd133670d143a6cab011aa35423a8b1413eb0b4f3e430e44),  }
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 0

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x0; length: 68; block+=0; #returns=0
  func: forward(address,bytes) (0x6fadcf72)
  input: 000000000000000000000000c3cf2af7ea37d6d9d0a23bdf84c71e8c099d03c2 0000000000000000000000000000000000000000000000000000000000000040  [failed to decode]
