[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(2)] ✔️
[Trimmer Stage: Transactions(1)] ❌
[Trimmer Stage: Transactions(0)] ✔️
[Trimmer Stage: TransactionHeader(0, BlockAdvance(0))] ✔️
[Trimmer Stage: Returns(0, 5)] ✔️
[Trimmer Stage: Returns(0, 4)] ✔️
[Trimmer Stage: Returns(0, 3)] ✔️
[Trimmer Stage: Returns(0, 2)] ✔️
[Trimmer Stage: Returns(0, 1)] ✔️
[Trimmer Stage: Returns(0, 0)] ✔️
[Trimmer Stage: Inputs(0, 4)] ❌
[Trimmer Stage: Inputs(0, 0)] ❌
[Trimmer Stage: Sender(0, 7)] ❌
[Trimmer Stage: Sender(0, 6)] ❌
[Trimmer Stage: Sender(0, 5)] ✔️
[Trimmer Stage: Sender(0, 4)] ✔️
[Trimmer Stage: Sender(0, 3)] ❌
[Trimmer Stage: Sender(0, 2)] ❌
[Trimmer Stage: Sender(0, 1)] ❌
[Trimmer Stage: Sender(0, 0)] ❌
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(3814697265625))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(100000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10))] ❌
[Trimmer Stage: BlockHeader(InitialEther(5))] ❌
[Trimmer Stage: BlockHeader(InitialEther(2))] ❌
[Trimmer Stage: BlockHeader(InitialEther(1))] ❌
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ we try sorting the transaction list ]
reduced testcases from 348 to 92 bytes (by 74 %) edit distance 277
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 9223407221226864640

TX[0] with tx_sender[226]; tx_receiver[0]; call_value: 0x8; length: 4; block+=1; #returns=0
  func: deposit() (0xd0e30db0)
  input: {  }
TX[1] with tx_sender[143]; tx_receiver[0]; call_value: 0x0; length: 36; block+=1; #returns=6
  func: withdraw(uint256) (0x2e1a7d4d)
  input: { uint(15),  }
  returns:
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000001
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000001
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 1; data: 0x
TX[2] with tx_sender[34]; tx_receiver[0]; call_value: 0x0; length: 36; block+=1; #returns=0
  func: migrateTo(address) (0x4ddaf8f2)
  input: { address(0xcc079239d48f83be71dbbd18487f4acc279ee929),  }
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 10000

TX[0] with tx_sender[4]; tx_receiver[0]; call_value: 0x0; length: 36; block+=0; #returns=0
  func: withdraw(uint256) (0x2e1a7d4d)
  input: { uint(15),  }
