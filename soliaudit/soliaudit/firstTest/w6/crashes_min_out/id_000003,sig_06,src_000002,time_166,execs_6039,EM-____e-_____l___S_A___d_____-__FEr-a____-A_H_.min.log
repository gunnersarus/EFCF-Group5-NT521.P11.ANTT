[using trimmer code]
[Trimmer Stage: Start]
[Trimmer Stage: Transactions(2)] ✔️
[Trimmer Stage: Transactions(1)] ❌
[Trimmer Stage: Transactions(0)] ✔️
[Trimmer Stage: TransactionWithValue(0)] ✔️
[Trimmer Stage: TransactionHeader(0, CallValue(1000000000000000000))] ❌
[Trimmer Stage: TransactionHeader(0, CallValue(100000))] ❌
[Trimmer Stage: TransactionHeader(0, CallValue(100))] ❌
[Trimmer Stage: TransactionHeader(0, CallValue(1))] ❌
[Trimmer Stage: TransactionHeader(0, CallValue(0))] ❌
[Trimmer Stage: Returns(0, 2)] ✔️
[Trimmer Stage: Returns(0, 1)] ✔️
[Trimmer Stage: Returns(0, 0)] ❌
[Trimmer Stage: ReturnData(0, 0, 0)] ✔️
[Trimmer Stage: Reenter(0, 0, 0)] ✔️
[Trimmer Stage: Sender(0, 1)] ✔️
[Trimmer Stage: Sender(0, 0)] ✔️
[Trimmer Stage: Receiver(0, 0)] ✔️
[Trimmer Stage: BlockHeader(Number(0))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(3814697265625))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(100000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10000))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(10))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(5))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(2))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(1))] ✔️
[Trimmer Stage: BlockHeader(InitialEther(0))] ❌
[minimizing difficulty]
[ sender/receiver selector TX[0] ]
[ we try sorting the transaction list ]
reduced testcases from 408 to 60 bytes (by 86 %) edit distance 361
=== Before minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 4194304

TX[0] with tx_sender[1]; tx_receiver[0]; call_value: 0x0; length: 0; block+=0; #returns=3
  input: 
  returns:
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 1; data: 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
    return val: 1; allows reenter: 2; data: 0x0000000000000000000000000000000000000000000000000000000000000000
TX[1] with tx_sender[1]; tx_receiver[0]; call_value: 0x100bd33fb98ba000000000000000000; length: 0; block+=0; #returns=3
  input: 
  returns:
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
    return val: 1; allows reenter: 1; data: 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
    return val: 1; allows reenter: 1; data: 0x0000000000000000000000000000000000000000000000000000000000000000
TX[2] with tx_sender[247]; tx_receiver[0]; call_value: 0x0; length: 4; block+=1; #returns=1
  func: kill() (0x41c0e1b5)
  input: {  }
  returns:
    return val: 1; allows reenter: 0; data: 0x0000000000000000000000000000000000000000000000000000000000000001
=== After minimizing: ===
Block header:
  number: 0
  difficulty: 0
  gas_limit: 0
  timestamp: 0
  initial_ether: 1

TX[0] with tx_sender[0]; tx_receiver[0]; call_value: 0x100bd33fb98ba000000000000000000; length: 0; block+=0; #returns=1
  input: 
  returns:
    return val: 1; allows reenter: 0; data: 0x
