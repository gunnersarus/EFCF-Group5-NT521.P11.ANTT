Transactions Sequences:
--------------------------------------------------------------
TX []
TX [#🪙]
    0x0()[🪙];
TX [🪙]
    0x0()[];
TX []
    0x0()[🪙];
TX [#]
    0x100()[🪙];
TX [⏰🪙]
    0x10000()[🪙];
TX [⏰🪙]
    0x13d0c603()[🪙];
TX []
    0xd0c60300()[🪙];
TX []
    LCOpenTimeout(bytes32)[];
TX []
    NAME():(string)[🪙];
TX []
    VERSION():(string)[🪙];
    fallback()[🪙];
    fallback()[];
    0x0()[];
TX [⏰🪙]
    byzantineCloseChannel(bytes32)[🪙];
TX []
    byzantineCloseChannel(bytes32)[];
TX []
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    fallback()[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX [#⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[];
TX [#⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX [#⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX [#⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    0x1010101()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    fallback()[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[🪙];
TX [#⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    fallback()[🪙];
    0x1010101()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    fallback()[🪙];
    0x290000()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[🪙↕️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    fallback()[🪙];
    fallback()[🪙];
    0x72206661()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    fallback()[🪙];
    fallback()[🪙];
    0x75726500()[🪙];
TX [⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    fallback()[🪙];
    fallback()[🪙];
    fallback()[🪙↕️ ↩️ ↩️ ];
TX [#🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[🪙];
    0x20d4d391()[🪙];
    0x0()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    numChannels():(uint256)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [#⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    fallback()[];
TX [#⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    fallback()[];
    0x1010101()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    fallback()[];
    fallback()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    fallback()[];
    fallback()[];
    fallback()[];
    fallback()[];
    fallback()[];
    fallback()[🪙];
    0xc3()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[↕️ ↩️ ];
TX []
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    fallback()[🪙];
TX []
    fallback()[];
TX [#⏰🪙]
    fallback()[🪙];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[🪙];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX [⏰🪙]
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    fallback()[🪙];
TX [#🪙]
    isSignedBy(bytes32,string,address):(bool)[🪙];
TX []
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    joinChannel(bytes32,uint256[2])[🪙];
    fallback()[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    numChannels():(uint256)[];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [#⏰🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    0x0()[🪙];
TX [⏰🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    0x0()[🪙];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    0xc04689c0()[];
TX [⏰🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[🪙];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    fallback()[];
    fallback()[🪙];
    0xd0c60300()[🪙];
TX [#]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
TX [#🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[🪙];
TX [⏰🪙]
    toEthereumSignedMessage(string):(bytes32)[🪙];
TX []
    uintToBytes32(uint256):(bytes)[🪙];
TX [#🪙]
    uintToString(uint256):(string)[🪙];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX [#⏰🪙]
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[🪙];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[🪙];
    0x21dd0c6()[🪙];
TX [🪙]
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[];
    fallback()[🪙];
    fallback()[];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
--------------------------------------------------------------
== ABI coverage: ==
c3 ==> 1
100 ==> 1
10000 ==> 1
290000 ==> 1
21dd0c6 ==> 1
isSignedBy(bytes32,string,address):(bool) ==> 1
13d0c603 ==> 1
20d4d391 ==> 1
72206661 ==> 1
75726500 ==> 1
uintToBytes32(uint256):(bytes) ==> 1
NAME():(string) ==> 1
c04689c0 ==> 1
toEthereumSignedMessage(string):(bytes32) ==> 1
uintToString(uint256):(string) ==> 1
getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2]) ==> 1
VERSION():(string) ==> 1
virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address) ==> 2
numChannels():(uint256) ==> 2
d0c60300 ==> 2
1010101 ==> 3
closeVirtualChannel(bytes32,bytes32) ==> 3
byzantineCloseChannel(bytes32) ==> 4
deposit(bytes32,address,uint256,bool) ==> 5
updateLCstate(bytes32,uint256[6],bytes32,string,string) ==> 6
initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) ==> 9
consensusCloseChannel(bytes32,uint256,uint256[4],string,string) ==> 12
joinChannel(bytes32,uint256[2]) ==> 20
LCOpenTimeout(bytes32) ==> 32
settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) ==> 62
0 ==> 69
createChannel(bytes32,address,uint256,address,uint256[2]) ==> 185
Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address) ==> 0
getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256) ==> 0
hexstrToBytes(string):(bytes) ==> 0
parseInt16Char(string):(uint256) ==> 0
recoverSigner(bytes32,string):(address) ==> 0
substring(string,uint256,uint256):(string) ==> 0

Maximum ABI coverage with: ./c1/crashes/../queue/id:000115,src:000037,time:60952,execs:769307,EM-_____-____m______AI__d____p-___E_-_c___-ADH_,+cov
--------------------------------------------------------------
Number of fuzzcases: 197
Average number of TXs: 2.197969543147208
Number of unique TX sequences: 85
Number of unique TX sequences (consecutive deduplicated): 68
