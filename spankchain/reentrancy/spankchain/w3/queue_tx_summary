Transactions Sequences:
--------------------------------------------------------------
TX []
TX []
    0x0()[🪙];
TX [⏰🪙]
    0x0()[];
TX [#]
    0x0()[];
    fallback()[];
TX [#⏰🪙]
    0xff00()[🪙];
TX []
    0xffffff00()[🪙];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[🪙];
TX []
    LCOpenTimeout(bytes32)[];
TX []
    NAME():(string)[🪙];
TX []
    NAME():(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    NAME():(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    NAME():(string)[↕️ ↩️ ↩️ ↩️ ];
    NAME():(string)[↕️ ↩️ ↩️ ↩️ ];
    NAME():(string)[];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    NAME():(string)[↕️ ↩️ ];
    NAME():(string)[↕️ ↩️ ];
    NAME():(string)[↕️ ↩️ ];
    NAME():(string)[↕️ ↩️ ];
    NAME():(string)[↕️ ↩️ ];
    NAME():(string)[↕️ ↩️ ];
    NAME():(string)[↕️ ↩️ ];
TX []
    NAME():(string)[];
    fallback()[🪙];
TX []
    VERSION():(string)[🪙];
TX [#⏰🪙]
    VERSION():(string)[];
TX []
    VERSION():(string)[↕️ ↩️ ↩️ ↩️ ];
    VERSION():(string)[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    VERSION():(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    VERSION():(string)[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    VERSION():(string)[↕️ ↩️ ];
    VERSION():(string)[];
    VERSION():(string)[];
    VERSION():(string)[];
TX []
    VERSION():(string)[↕️ ↩️ ];
    VERSION():(string)[↕️ ];
    VERSION():(string)[↕️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    VERSION():(string)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[🪙];
TX []
    byzantineCloseChannel(bytes32)[];
TX [🪙]
    byzantineCloseChannel(bytes32)[↕️ ];
TX [🪙]
    byzantineCloseChannel(bytes32)[🪙];
TX [⏰]
    byzantineCloseChannel(bytes32)[];
TX [⏰🪙]
    byzantineCloseChannel(bytes32)[];
TX [#🪙]
    byzantineCloseChannel(bytes32)[];
TX [#⏰]
    byzantineCloseChannel(bytes32)[];
TX [⏰]
    byzantineCloseChannel(bytes32)[];
    fallback()[🪙];
TX [⏰🪙]
    byzantineCloseChannel(bytes32)[];
    fallback()[🪙];
    fallback()[🪙];
TX []
    closeVirtualChannel(bytes32,bytes32)[];
TX [🪙]
    closeVirtualChannel(bytes32,bytes32)[];
TX [⏰]
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    closeVirtualChannel(bytes32,bytes32)[🪙];
TX [#⏰🪙]
    closeVirtualChannel(bytes32,bytes32)[];
TX [#⏰]
    closeVirtualChannel(bytes32,bytes32)[];
TX [#⏰]
    closeVirtualChannel(bytes32,bytes32)[];
    0x0()[];
TX [#🪙]
    closeVirtualChannel(bytes32,bytes32)[];
    0x0()[🪙];
TX []
    closeVirtualChannel(bytes32,bytes32)[];
    0x20626565()[🪙];
TX []
    closeVirtualChannel(bytes32,bytes32)[];
    0x61647920()[🪙];
TX []
    closeVirtualChannel(bytes32,bytes32)[];
    0x62656574()[🪙];
TX [⏰🪙]
    closeVirtualChannel(bytes32,bytes32)[];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[🪙];
TX [#⏰🪙]
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX [⏰]
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[🪙];
TX [⏰🪙]
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    0x0()[🪙];
TX [#⏰🪙]
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    0x2be()[];
TX [⏰]
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    0xd100()[🪙];
TX []
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    fallback()[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    0x0()[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[🪙↕️ ↩️ ];
    0xdfef99cc()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    byzantineCloseChannel(bytes32)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    fallback()[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    byzantineCloseChannel(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    fallback()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    NAME():(string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    NAME():(string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    0x0()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    NAME():(string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    NAME():(string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[↕️ ↩️ ↩️ ];
    VERSION():(string)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[];
    LCOpenTimeout(bytes32)[];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    closeVirtualChannel(bytes32,bytes32)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    NAME():(string)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    NAME():(string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    NAME():(string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    LCOpenTimeout(bytes32)[];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[🪙↕️ ↩️ ];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ];
    byzantineCloseChannel(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    parseInt16Char(string):(uint256)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    parseInt16Char(string):(uint256)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    fallback()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[🪙↕️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    parseInt16Char(string):(uint256)[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    parseInt16Char(string):(uint256)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    parseInt16Char(string):(uint256)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[↕️ ↩️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[🪙];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    fallback()[🪙↕️ ↩️ ];
    fallback()[🪙];
    fallback()[🪙];
    fallback()[🪙];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[🪙];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[↕️ ↩️ ];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    0x0()[];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    0x170b14ee()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    0x28038e7a()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    0x3c3c3c3c()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    LCOpenTimeout(bytes32)[];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    joinChannel(bytes32,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    numChannels():(uint256)[🪙↕️ ];
    fallback()[🪙];
    fallback()[🪙];
    0x3c3c3c3c()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    parseInt16Char(string):(uint256)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    parseInt16Char(string):(uint256)[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    parseInt16Char(string):(uint256)[];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    deposit(bytes32,address,uint256,bool)[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[🪙↕️ ↩️ ];
    fallback()[🪙];
    fallback()[🪙];
    0x56432069()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    joinChannel(bytes32,uint256[2])[🪙];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[🪙↕️ ↩️ ];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToString(uint256):(string)[];
    joinChannel(bytes32,uint256[2])[🪙↕️ ];
    uintToString(uint256):(string)[];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[↕️ ↩️ ];
TX [⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[🪙↕️ ];
    fallback()[];
    fallback()[];
    fallback()[🪙];
    fallback()[🪙];
    fallback()[🪙];
TX [#]
    deposit(bytes32,address,uint256,bool)[];
TX []
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    deposit(bytes32,address,uint256,bool)[];
TX [#🪙]
    deposit(bytes32,address,uint256,bool)[];
TX [⏰]
    deposit(bytes32,address,uint256,bool)[];
TX [#🪙]
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    fallback()[🪙];
TX []
    fallback()[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
TX [#⏰🪙]
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[🪙];
TX [🪙]
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    0x8008000()[🪙];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    0xea370000()[🪙];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX [#⏰🪙]
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    fallback()[🪙];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    fallback()[🪙];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    fallback()[🪙];
    fallback()[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[↕️ ];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    0xea370000()[🪙];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    fallback()[🪙];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[🪙];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    LCOpenTimeout(bytes32)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX [⏰]
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    fallback()[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX [🪙]
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    fallback()[🪙↕️ ↩️ ];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    joinChannel(bytes32,uint256[2])[🪙↕️ ];
    LCOpenTimeout(bytes32)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[🪙];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
TX [🪙]
    hexstrToBytes(string):(bytes)[];
TX [⏰🪙]
    hexstrToBytes(string):(bytes)[🪙];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[🪙];
TX [🪙]
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX [⏰]
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX [#🪙]
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX [#]
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX [#⏰🪙]
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX [⏰🪙]
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    0x0()[];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    0x0()[🪙];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    fallback()[🪙];
    0x3c3c3c3c()[🪙];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    fallback()[];
    fallback()[🪙];
    0x3c3c3c3c()[🪙↕️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
TX [⏰🪙]
    isSignedBy(bytes32,string,address):(bool)[];
TX [#⏰🪙]
    isSignedBy(bytes32,string,address):(bool)[];
TX [⏰]
    isSignedBy(bytes32,string,address):(bool)[];
TX [#🪙]
    isSignedBy(bytes32,string,address):(bool)[];
TX [🪙]
    isSignedBy(bytes32,string,address):(bool)[];
TX [#]
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
TX [🪙]
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[🪙];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    deposit(bytes32,address,uint256,bool)[🪙↕️ ];
    LCOpenTimeout(bytes32)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[];
TX [⏰🪙]
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[🪙];
    0x0()[];
TX [⏰🪙]
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[🪙];
    0xc000000()[];
TX [⏰🪙]
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[];
    fallback()[🪙];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[];
    fallback()[🪙];
    0x0()[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
TX [🪙]
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
TX [🪙]
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    joinChannel(bytes32,uint256[2])[🪙];
    fallback()[];
    LCOpenTimeout(bytes32)[];
TX [#🪙]
    numChannels():(uint256)[🪙];
TX [#🪙]
    numChannels():(uint256)[];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[];
TX [⏰]
    parseInt16Char(string):(uint256)[🪙];
TX []
    parseInt16Char(string):(uint256)[];
TX [#🪙]
    parseInt16Char(string):(uint256)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX [#🪙]
    parseInt16Char(string):(uint256)[];
    0xc3cf2af7()[🪙];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    parseInt16Char(string):(uint256)[↕️ ];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[];
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ];
    parseInt16Char(string):(uint256)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX [🪙]
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[];
    parseInt16Char(string):(uint256)[];
    parseInt16Char(string):(uint256)[];
TX []
    parseInt16Char(string):(uint256)[↕️ ↩️ ↩️ ];
    parseInt16Char(string):(uint256)[];
    parseInt16Char(string):(uint256)[↕️ ↩️ ];
    parseInt16Char(string):(uint256)[];
    LCOpenTimeout(bytes32)[];
TX [#⏰🪙]
    recoverSigner(bytes32,string):(address)[];
TX []
    recoverSigner(bytes32,string):(address)[];
TX [#⏰🪙]
    recoverSigner(bytes32,string):(address)[🪙];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[🪙↕️ ];
    fallback()[🪙];
    fallback()[🪙];
    0x6b4fae2e()[🪙];
TX []
    substring(string,uint256,uint256):(string)[];
TX [⏰]
    substring(string,uint256,uint256):(string)[];
TX []
    substring(string,uint256,uint256):(string)[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
TX [⏰🪙]
    toEthereumSignedMessage(string):(bytes32)[];
TX [#🪙]
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[🪙];
TX [#]
    toEthereumSignedMessage(string):(bytes32)[];
TX [🪙]
    toEthereumSignedMessage(string):(bytes32)[];
TX [⏰]
    toEthereumSignedMessage(string):(bytes32)[];
    0x0()[];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    fallback()[🪙↕️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    fallback()[🪙];
    fallback()[];
TX [#]
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ];
    LCOpenTimeout(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX [#⏰🪙]
    uintToBytes32(uint256):(bytes)[];
TX []
    uintToBytes32(uint256):(bytes)[];
TX []
    uintToBytes32(uint256):(bytes)[🪙];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[🪙];
TX [🪙]
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    LCOpenTimeout(bytes32)[];
    uintToBytes32(uint256):(bytes)[];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[↕️ ];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[🪙];
TX [#⏰🪙]
    uintToString(uint256):(string)[];
TX []
    uintToString(uint256):(string)[];
TX [⏰🪙]
    uintToString(uint256):(string)[];
TX []
    uintToString(uint256):(string)[];
    0x0()[🪙];
TX [#⏰🪙]
    uintToString(uint256):(string)[];
    0x0()[];
TX [🪙]
    uintToString(uint256):(string)[];
    0x99d03c2()[🪙];
TX []
    uintToString(uint256):(string)[];
    0x9d03c224()[🪙];
TX [⏰]
    uintToString(uint256):(string)[];
    0xd9d0a23b()[🪙];
TX [#🪙]
    uintToString(uint256):(string)[];
    0xff05f5ea()[🪙];
TX []
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
TX [#]
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
TX [🪙]
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
TX []
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
TX []
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[🪙];
    fallback()[];
TX []
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
    fallback()[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
TX []
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[↕️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
TX []
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    uintToString(uint256):(string)[];
    byzantineCloseChannel(bytes32)[];
TX []
    uintToString(uint256):(string)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    uintToString(uint256):(string)[];
    fallback()[];
    0x0()[];
TX []
    uintToString(uint256):(string)[];
    fallback()[🪙];
    0x0()[🪙];
TX [#]
    uintToString(uint256):(string)[];
    fallback()[🪙];
    0x24000000()[🪙];
TX [#]
    uintToString(uint256):(string)[];
    fallback()[🪙↕️ ↩️ ];
    fallback()[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[];
    joinChannel(bytes32,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[];
    byzantineCloseChannel(bytes32)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX [🪙]
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ];
    uintToString(uint256):(string)[];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[↕️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[];
    byzantineCloseChannel(bytes32)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[↕️ ↩️ ↩️ ↩️ ];
    uintToString(uint256):(string)[↕️ ↩️ ];
    uintToString(uint256):(string)[];
    uintToString(uint256):(string)[];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX [🪙]
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX [#🪙]
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX [⏰]
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX [#]
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[🪙];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    0x0()[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[🪙];
TX [⏰🪙]
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[↕️ ↩️ ];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[];
    0x0()[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[🪙];
    0x0()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[🪙];
    0xe6798fc5()[🪙];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[🪙];
    fallback()[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[↕️ ];
    fallback()[🪙];
    0x0()[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[];
    fallback()[];
    fallback()[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[];
    fallback()[];
    fallback()[];
    fallback()[🪙];
    0x7d6fa9e2()[🪙];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[🪙];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[];
    fallback()[];
    fallback()[🪙];
    fallback()[];
TX [⏰]
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[🪙];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ];
    LCOpenTimeout(bytes32)[];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
--------------------------------------------------------------
== ABI coverage: ==
2be ==> 1
d100 ==> 1
ff00 ==> 1
8008000 ==> 1
99d03c2 ==> 1
c000000 ==> 1
170b14ee ==> 1
20626565 ==> 1
24000000 ==> 1
28038e7a ==> 1
56432069 ==> 1
61647920 ==> 1
62656574 ==> 1
6b4fae2e ==> 1
7d6fa9e2 ==> 1
9d03c224 ==> 1
c3cf2af7 ==> 1
d9d0a23b ==> 1
dfef99cc ==> 1
e6798fc5 ==> 1
ff05f5ea ==> 1
ffffff00 ==> 1
hexstrToBytes(string):(bytes) ==> 2
ea370000 ==> 2
numChannels():(uint256) ==> 3
getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2]) ==> 3
substring(string,uint256,uint256):(string) ==> 4
3c3c3c3c ==> 4
Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address) ==> 4
recoverSigner(bytes32,string):(address) ==> 4
NAME():(string) ==> 21
byzantineCloseChannel(bytes32) ==> 21
VERSION():(string) ==> 22
deposit(bytes32,address,uint256,bool) ==> 23
settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) ==> 28
closeVirtualChannel(bytes32,bytes32) ==> 28
virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address) ==> 29
consensusCloseChannel(bytes32,uint256,uint256[4],string,string) ==> 41
uintToBytes32(uint256):(bytes) ==> 58
parseInt16Char(string):(uint256) ==> 67
initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) ==> 74
updateLCstate(bytes32,uint256[6],bytes32,string,string) ==> 96
getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256) ==> 111
uintToString(uint256):(string) ==> 130
0 ==> 135
toEthereumSignedMessage(string):(bytes32) ==> 138
joinChannel(bytes32,uint256[2]) ==> 140
isSignedBy(bytes32,string,address):(bool) ==> 157
LCOpenTimeout(bytes32) ==> 181
createChannel(bytes32,address,uint256,address,uint256[2]) ==> 833

Maximum ABI coverage with: ./w3/crashes/../queue/id:000456,src:000196,time:107235,execs:1295821,EM-_____-____m____S_AI_____o__-__F__-_____-ADH_,+cov
--------------------------------------------------------------
Number of fuzzcases: 854
Average number of TXs: 2.788056206088993
Number of unique TX sequences: 361
Number of unique TX sequences (consecutive deduplicated): 213
