Transactions Sequences:
--------------------------------------------------------------
TX []
TX []
    0x0()[🪙];
TX []
    0x0()[];
TX [#🪙]
    0x5d757575()[🪙];
TX [#⏰🪙]
    0xd6d6d6d6()[🪙];
TX []
    0xff0a()[🪙];
TX [🪙]
    0xffff()[🪙];
    fallback()[🪙↕️ ];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX [#⏰🪙]
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    LCOpenTimeout(bytes32)[];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[↕️ ↩️ ];
TX []
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[🪙↕️ ];
    fallback()[🪙];
    fallback()[🪙↕️ ];
TX []
    LCOpenTimeout(bytes32)[];
TX [⏰🪙]
    NAME():(string)[🪙];
    0x20202020()[🪙];
TX [🪙]
    NAME():(string)[];
    0x49356b34()[🪙];
TX []
    VERSION():(string)[];
TX []
    VERSION():(string)[🪙];
TX []
    VERSION():(string)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    VERSION():(string)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    VERSION():(string)[🪙↕️ ↩️ ↩️ ↩️ ];
TX []
    VERSION():(string)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    VERSION():(string)[];
    VERSION():(string)[];
    VERSION():(string)[];
    LCOpenTimeout(bytes32)[];
TX []
    VERSION():(string)[↕️ ↩️ ];
    VERSION():(string)[↕️ ↩️ ];
    VERSION():(string)[↕️ ↩️ ];
    VERSION():(string)[↕️ ↩️ ];
    VERSION():(string)[↕️ ↩️ ];
TX [⏰]
    VERSION():(string)[];
    VERSION():(string)[];
    VERSION():(string)[];
    VERSION():(string)[↕️ ↩️ ↩️ ];
    VERSION():(string)[];
    VERSION():(string)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    VERSION():(string)[↕️ ↩️ ];
    VERSION():(string)[↕️ ↩️ ];
    VERSION():(string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    VERSION():(string)[↕️ ↩️ ];
    VERSION():(string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
TX [⏰🪙]
    byzantineCloseChannel(bytes32)[🪙];
TX []
    byzantineCloseChannel(bytes32)[];
TX []
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[🪙];
TX []
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    fallback()[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    fallback()[];
    closeVirtualChannel(bytes32,bytes32)[];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX [⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    0x0()[];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    0x0()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    0xfdb04035()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    0x3c3c3c3c()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    0x3c3c3c3c()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    closeVirtualChannel(bytes32,bytes32)[];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    joinChannel(bytes32,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    fallback()[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    VERSION():(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    closeVirtualChannel(bytes32,bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
    0x4f5359b2()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
    0xb2a5bab1()[🪙];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
    0xe51209e4()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[];
    0x0()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    0x8f8f8f8f()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    byzantineCloseChannel(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[🪙];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    0x0()[];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    0x0()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    fallback()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    0x0()[↕️ ];
    closeVirtualChannel(bytes32,bytes32)[];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    VERSION():(string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    VERSION():(string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    closeVirtualChannel(bytes32,bytes32)[↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    deposit(bytes32,address,uint256,bool)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[🪙];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[↕️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    numChannels():(uint256)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[🪙↕️ ↩️ ↩️ ];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    0x32()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[];
    fallback()[🪙];
    0x0()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[🪙];
    fallback()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    byzantineCloseChannel(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[🪙↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    byzantineCloseChannel(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    numChannels():(uint256)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    byzantineCloseChannel(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    substring(string,uint256,uint256):(string)[🪙↕️ ↩️ ];
    0x0()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[🪙];
    0x0()[🪙];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    fallback()[🪙];
    0x0()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[🪙];
    LCOpenTimeout(bytes32)[];
TX [#🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[🪙];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[🪙];
    fallback()[🪙];
    0xcc610000()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[];
    fallback()[];
    0xef99cc61()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[🪙];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[🪙];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[🪙];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[🪙];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    fallback()[↕️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    0x3c3c3c3c()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    byzantineCloseChannel(bytes32)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    byzantineCloseChannel(bytes32)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ↩️ ];
    byzantineCloseChannel(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[🪙];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    fallback()[🪙];
    0x75726500()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    joinChannel(bytes32,uint256[2])[🪙];
    byzantineCloseChannel(bytes32)[↕️ ↩️ ↩️ ];
    fallback()[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ];
    numChannels():(uint256)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    recoverSigner(bytes32,string):(address)[🪙];
    fallback()[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ];
TX [🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX [⏰]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    0x32()[🪙];
TX []
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX [#]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[↕️ ↩️ ];
TX [⏰🪙]
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[🪙↕️ ];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    0x70794e47()[🪙];
TX []
    deposit(bytes32,address,uint256,bool)[🪙];
TX []
    fallback()[🪙];
TX []
    fallback()[];
TX [⏰🪙]
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[];
TX []
    getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256)[🪙];
TX [⏰]
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[🪙↕️ ];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
TX [⏰]
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ↩️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ↩️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ↩️ ];
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[↕️ ↩️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2])[];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    hexstrToBytes(string):(bytes)[];
TX [🪙]
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[🪙];
TX [#]
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
TX [⏰]
    hexstrToBytes(string):(bytes)[];
TX [#]
    hexstrToBytes(string):(bytes)[];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[];
    closeVirtualChannel(bytes32,bytes32)[];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX [🪙]
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    hexstrToBytes(string):(bytes)[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX [⏰🪙]
    hexstrToBytes(string):(bytes)[];
    fallback()[↕️ ↩️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[];
    fallback()[🪙];
TX []
    hexstrToBytes(string):(bytes)[];
    fallback()[↕️ ↩️ ];
TX [⏰🪙]
    hexstrToBytes(string):(bytes)[];
    fallback()[🪙];
    0x0()[🪙];
TX []
    hexstrToBytes(string):(bytes)[];
    fallback()[];
    fallback()[🪙];
    0x61676543()[🪙];
TX [#⏰🪙]
    hexstrToBytes(string):(bytes)[];
    fallback()[];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[];
TX []
    hexstrToBytes(string):(bytes)[];
    fallback()[🪙];
    fallback()[];
    fallback()[];
    fallback()[🪙];
    0x0()[🪙];
TX [⏰]
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX [⏰]
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    fallback()[🪙];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
    fallback()[🪙];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
TX [⏰]
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    fallback()[🪙];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    fallback()[🪙];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    hexstrToBytes(string):(bytes)[];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[↕️ ↩️ ↩️ ];
TX []
    hexstrToBytes(string):(bytes)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ];
TX []
    hexstrToBytes(string):(bytes)[];
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX [⏰🪙]
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX [#⏰🪙]
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[🪙];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ↩️ ];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    fallback()[🪙];
TX []
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
    fallback()[];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[🪙];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    0x0()[];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    0x0()[🪙];
    fallback()[🪙];
    0x0()[];
TX [🪙]
    isSignedBy(bytes32,string,address):(bool)[];
    0xffd0a23b()[🪙];
TX [⏰]
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[↕️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[🪙];
    0x0()[🪙];
TX [⏰🪙]
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[🪙];
    0x1d0100()[];
TX [🪙]
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[🪙];
    0x200000()[];
TX []
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[🪙];
    0x99d03c2()[🪙];
TX [🪙]
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[];
    fallback()[];
    fallback()[🪙];
    0xc3b32af7()[];
TX [⏰]
    isSignedBy(bytes32,string,address):(bool)[];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[🪙];
    0x0()[🪙];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[🪙↕️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[];
    isSignedBy(bytes32,string,address):(bool)[];
TX []
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    isSignedBy(bytes32,string,address):(bool)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    numChannels():(uint256)[];
TX []
    numChannels():(uint256)[🪙];
TX []
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
TX []
    numChannels():(uint256)[↕️ ↩️ ↩️ ];
    numChannels():(uint256)[];
TX []
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ];
    numChannels():(uint256)[];
TX []
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    numChannels():(uint256)[↕️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ];
TX [🪙]
    numChannels():(uint256)[↕️ ↩️ ];
    numChannels():(uint256)[↕️ ↩️ ↩️ ↩️ ];
    numChannels():(uint256)[];
    numChannels():(uint256)[];
    numChannels():(uint256)[];
    numChannels():(uint256)[];
    numChannels():(uint256)[];
    numChannels():(uint256)[];
    LCOpenTimeout(bytes32)[];
TX []
    parseInt16Char(string):(uint256)[🪙];
TX [#]
    parseInt16Char(string):(uint256)[];
TX []
    parseInt16Char(string):(uint256)[];
    0x344c6158()[🪙];
TX [#]
    recoverSigner(bytes32,string):(address)[];
TX []
    recoverSigner(bytes32,string):(address)[🪙↕️ ];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [⏰🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[🪙];
TX [⏰🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [#]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [#⏰🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [⏰]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[↕️ ↩️ ];
TX [#⏰]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
TX [🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    0x0()[🪙];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    0x3c3c3c3c()[🪙];
TX [⏰🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    0x4b1cf886()[🪙];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    0x59536c73()[🪙];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    0x65642e00()[🪙];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    0x77756e48()[🪙];
TX []
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    0xcc079239()[];
TX [⏰]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    fallback()[🪙];
    0x0()[🪙];
TX [⏰🪙]
    settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string)[];
    fallback()[🪙];
    fallback()[];
    0xcc079239()[];
TX [⏰🪙]
    substring(string,uint256,uint256):(string)[];
    0x0()[];
TX []
    substring(string,uint256,uint256):(string)[];
    0x6e486951()[🪙];
TX []
    substring(string,uint256,uint256):(string)[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ];
    fallback()[🪙];
    fallback()[];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    fallback()[🪙];
    0x7fffffff()[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[🪙];
TX [⏰]
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX [⏰]
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
TX [#]
    toEthereumSignedMessage(string):(bytes32)[];
    fallback()[🪙];
    0x0()[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    fallback()[🪙];
    fallback()[];
    0x78505777()[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    0x76774671()[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    fallback()[];
    fallback()[];
    fallback()[];
    fallback()[🪙];
    0x0()[];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    fallback()[];
    fallback()[🪙];
    fallback()[];
    fallback()[🪙];
    0x7746905a()[🪙];
TX [⏰]
    toEthereumSignedMessage(string):(bytes32)[];
    fallback()[];
    fallback()[];
    fallback()[];
    fallback()[🪙];
    0x78536830()[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙↕️ ↩️ ];
    joinChannel(bytes32,uint256[2])[🪙];
    LCOpenTimeout(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
TX [🪙]
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[↕️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
TX [⏰]
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    LCOpenTimeout(bytes32)[];
TX [⏰]
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ↩️ ];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    LCOpenTimeout(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
    toEthereumSignedMessage(string):(bytes32)[];
TX []
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    toEthereumSignedMessage(string):(bytes32)[↕️ ↩️ ↩️ ];
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    uintToBytes32(uint256):(bytes)[];
TX [⏰]
    uintToBytes32(uint256):(bytes)[];
TX [#⏰🪙]
    uintToBytes32(uint256):(bytes)[];
TX [#]
    uintToBytes32(uint256):(bytes)[];
TX [🪙]
    uintToBytes32(uint256):(bytes)[];
TX [#🪙]
    uintToBytes32(uint256):(bytes)[];
TX [#⏰🪙]
    uintToBytes32(uint256):(bytes)[🪙];
TX []
    uintToBytes32(uint256):(bytes)[];
    0x32()[🪙];
TX [#]
    uintToBytes32(uint256):(bytes)[];
    fallback()[];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    0x32()[🪙];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    0x32()[🪙];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    LCOpenTimeout(bytes32)[];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    0x32()[🪙];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    0x32()[🪙];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ↩️ ↩️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    0x32()[🪙];
TX []
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[];
    uintToBytes32(uint256):(bytes)[↕️ ↩️ ];
    uintToBytes32(uint256):(bytes)[];
    0x32()[🪙];
TX []
    uintToString(uint256):(string)[];
TX []
    uintToString(uint256):(string)[🪙↕️ ↩️ ];
    createChannel(bytes32,address,uint256,address,uint256[2])[↕️ ↩️ ];
    closeVirtualChannel(bytes32,bytes32)[];
TX [#⏰]
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[];
    LCOpenTimeout(bytes32)[];
    joinChannel(bytes32,uint256[2])[🪙↕️ ];
    consensusCloseChannel(bytes32,uint256,uint256[4],string,string)[];
    createChannel(bytes32,address,uint256,address,uint256[2])[🪙↕️ ↩️ ↩️ ];
    initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string)[];
TX []
    updateLCstate(bytes32,uint256[6],bytes32,string,string)[🪙↕️ ];
    fallback()[];
    0x0()[🪙];
TX [⏰]
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[🪙↕️ ];
TX []
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[];
TX [⏰🪙]
    virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address)[];
    fallback()[🪙];
--------------------------------------------------------------
== ABI coverage: ==
ff0a ==> 1
ffff ==> 1
1d0100 ==> 1
200000 ==> 1
99d03c2 ==> 1
20202020 ==> 1
344c6158 ==> 1
49356b34 ==> 1
4b1cf886 ==> 1
4f5359b2 ==> 1
59536c73 ==> 1
5d757575 ==> 1
61676543 ==> 1
65642e00 ==> 1
6e486951 ==> 1
70794e47 ==> 1
75726500 ==> 1
76774671 ==> 1
7746905a ==> 1
77756e48 ==> 1
78505777 ==> 1
78536830 ==> 1
7fffffff ==> 1
8f8f8f8f ==> 1
b2a5bab1 ==> 1
c3b32af7 ==> 1
cc610000 ==> 1
d6d6d6d6 ==> 1
e51209e4 ==> 1
ef99cc61 ==> 1
fdb04035 ==> 1
ffd0a23b ==> 1
NAME():(string) ==> 2
cc079239 ==> 2
uintToString(uint256):(string) ==> 2
virtualChannels(bytes32):(bool,bool,uint256,address,uint256,address,address,address,address) ==> 3
parseInt16Char(string):(uint256) ==> 3
getChannel(bytes32):(address[2],uint256[4],uint256[4],uint256[2],uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256) ==> 3
recoverSigner(bytes32,string):(address) ==> 3
substring(string,uint256,uint256):(string) ==> 4
3c3c3c3c ==> 4
deposit(bytes32,address,uint256,bool) ==> 6
32 ==> 9
byzantineCloseChannel(bytes32) ==> 13
updateLCstate(bytes32,uint256[6],bytes32,string,string) ==> 22
VERSION():(string) ==> 31
closeVirtualChannel(bytes32,bytes32) ==> 32
numChannels():(uint256) ==> 37
initVCstate(bytes32,bytes32,bytes,address,address,uint256[2],uint256[4],string) ==> 45
uintToBytes32(uint256):(bytes) ==> 52
consensusCloseChannel(bytes32,uint256,uint256[4],string,string) ==> 54
getVirtualChannel(bytes32):(bool,bool,uint256,address,uint256,address,address,address,uint256[2],uint256[2],uint256[2]) ==> 54
Channels(bytes32):(uint256,uint256,bytes32,uint256,uint256,bool,bool,uint256,address) ==> 71
settleVC(bytes32,bytes32,uint256,address,address,uint256[4],string) ==> 91
isSignedBy(bytes32,string,address):(bool) ==> 96
joinChannel(bytes32,uint256[2]) ==> 116
LCOpenTimeout(bytes32) ==> 150
0 ==> 156
toEthereumSignedMessage(string):(bytes32) ==> 171
hexstrToBytes(string):(bytes) ==> 207
createChannel(bytes32,address,uint256,address,uint256[2]) ==> 1032

Maximum ABI coverage with: ./w4/crashes/../queue/id:000054,src:000002,time:2738,execs:43320,EM-_____-___M_l__s__A________p-_C__r-ac___-ADH_,+cov
--------------------------------------------------------------
Number of fuzzcases: 819
Average number of TXs: 3.056166056166056
Number of unique TX sequences: 360
Number of unique TX sequences (consecutive deduplicated): 217
